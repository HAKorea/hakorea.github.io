I"2<p>The <code>hyperion</code> platform allows you to integrate your <a href="https://hyperion-project.org/wiki">Hyperion</a> into Home Assistant. Hyperion is an open source Ambilight implementation which runs on many platforms.</p>
<h2>Configuration</h2>
<p>To use your Hyperion light in your installation, add the following to your <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
light:
  - platform: hyperion
    host: IP_ADDRESS
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='host' href='#host'></a> host</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>The IP address of the device the Hyperion service is running on.</p>
</span></p></dd><dt><a class='title-link' name='port' href='#port'></a> port</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The port used to communicate with the Hyperion service.</p>
</span></p><p class='default'>
Default value: <p>19444</p>
</p></dd><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The name of the device used in the frontend.</p>
</span></p></dd><dt><a class='title-link' name='priority' href='#priority'></a> priority</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The priority of the Hyperion instance make sure this is higher then the system prio in hyperion itself.</p>
</span></p><p class='default'>
Default value: <p>128</p>
</p></dd><dt><a class='title-link' name='hdmi_priority' href='#hdmi_priority'></a> hdmi_priority</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The priority of the HDMI grabber of this Hyperion instance, note that this priority must be higher than all other priorities used for correct behavior.</p>
</span></p><p class='default'>
Default value: <p>880</p>
</p></dd><dt><a class='title-link' name='default_color' href='#default_color'></a> default_color</dt><dd><p class='desc'><span class='type'>(<span class='list'>list</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The color of the light.</p>
</span></p><p class='default'>
Default value: <p>[255, 255, 255]</p>
</p></dd><dt><a class='title-link' name='effect_list' href='#effect_list'></a> effect_list</dt><dd><p class='desc'><span class='type'>(<span class='list'>list</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The list of effects that can be used.</p>
</span></p><p class='default'>
Default value: <p>[‘HDMI’, ‘Cinema brighten lights’, ‘Cinema dim lights’, ‘Knight rider’, ‘Blue mood blobs’, ‘Cold mood blobs’, ‘Full color mood blobs’, ‘Green mood blobs’, ‘Red mood blobs’, ‘Warm mood blobs’, ‘Police Lights Single’, ‘Police Lights Solid’, ‘Rainbow mood’, ‘Rainbow swirl fast’, ‘Rainbow swirl’, ‘Random’, ‘Running dots’, ‘System Shutdown’, ‘Snake’, ‘Sparks Color’, ‘Sparks’, ‘Strobe blue’, ‘Strobe Raspbmc’, ‘Strobe white’, ‘Color traces’, ‘UDP multicast listener’, ‘UDP listener’, ‘X-Mas’]</p>
</p></dd></dl>
</div>
<h2>Examples</h2>
<p>To start Hyperion with an effect, use the following automation:</p>
<pre><code class="language-yaml">automation:
- id: one
  alias: Turn Hyperion effect on when light goes on
  trigger:
    - platform: state
      entity_id: light.hyperion
      to: 'on'
  action:
    - service: light.turn_on
      data:
        entity_id: light.hyperion
        effect: &quot;Full color mood blobs&quot;
</code></pre>
<p>To have the lights playing an effect when pausing, idle or turn off a media player like plex you can use this example:</p>
<pre><code class="language-yaml">- alias: Set hyperion effect after playback
  trigger:
    - platform: state
      entity_id: media_player.plex
      to: 'off'
    - platform: state
      entity_id: media_player.plex.plex
      to: 'paused'
    - platform: state
      entity_id: media_player.plex.plex
      to: 'idle'
  action:
    - service: light.turn_on
      data:
        entity_id: light.hyperion
        effect: &quot;Full color mood blobs&quot;
</code></pre>
<p>To capture the screen when playing something of a media_player you can use this example:</p>
<pre><code class="language-yaml">- alias: Set hyperion when playback starts
  trigger:
    - platform: state
      entity_id: media_player.plex
      to: 'playing'
  action:
    - service: light.turn_on
      data:
        entity_id: light.hyperion
        effect: HDMI
</code></pre>
:ET