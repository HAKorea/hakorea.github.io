I"H<p>The <code>history</code> integration will track everything that is going on within Home
Assistant and allows the user to browse through it. It depends on the <code>recorder</code>
component for storing the data and uses the same database setting.
If any entities are excluded from being recorded,
no history will be available for these entities.</p>
<p>This integration is by default enabled, unless you’ve disabled or removed the <a href="https://www.home-assistant.io/integrations/default_config/"><code>default_config:</code></a> line from your configuration. If that is the case, the following example shows you how to enable this integration manually:</p>
<pre><code class="language-yaml"># Basic configuration.yaml entry
history:
</code></pre>
<p class='img'>
  <a href='/images/screenshots/component_history_24h.png'>
    <img src='/images/screenshots/component_history_24h.png' />
  </a>
</p>
<div class='note'>
Events are saved in a local database. Google Graphs is used to draw the graph.
Drawing is happening 100% in your browser. No data is transferred to anyone at any time.
</div>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='exclude' href='#exclude'></a> exclude</dt><dd><p class='desc'><span class='type'>(<span class='map'>map</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Configure which integrations should <strong>not</strong> be displayed.</p>
</span></p></dd><dd><dl class='nested'><dt><a class='title-link' name='entities' href='#entities'></a> entities</dt><dd><p class='desc'><span class='type'>(<span class='list'>list</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The list of entity ids to be excluded from the history.</p>
</span></p></dd><dt><a class='title-link' name='domains' href='#domains'></a> domains</dt><dd><p class='desc'><span class='type'>(<span class='list'>list</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The list of domains to be excluded from the history.</p>
</span></p></dd></dl></dd><dt><a class='title-link' name='include' href='#include'></a> include</dt><dd><p class='desc'><span class='type'>(<span class='map'>map</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Configure which integrations should be displayed.</p>
</span></p></dd><dd><dl class='nested'><dt><a class='title-link' name='entities' href='#entities'></a> entities</dt><dd><p class='desc'><span class='type'>(<span class='list'>list</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The list of entity ids to be included in the history.</p>
</span></p></dd><dt><a class='title-link' name='domains' href='#domains'></a> domains</dt><dd><p class='desc'><span class='type'>(<span class='list'>list</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The list of domains to be included in the history.</p>
</span></p></dd></dl></dd></dl>
</div>
<p>Without any <code>include</code> or <code>exclude</code> configuration the history displays graphs for
every entity (well that’s not exactly true - for instance <code>hidden</code> entities or
<code>scenes</code> are never shown) on a given date. If you are only interested in some
of the entities you have several options:</p>
<p>Define domains and entities to <code>exclude</code> (aka. blacklist). This is convenient
when you are basically happy with the information displayed, but just want to
remove some entities or domains. Usually these are entities/domains which do not
change (like <code>weblink</code>) or rarely change (like <code>updater</code> or <code>automation</code>).</p>
<pre><code class="language-yaml"># Example configuration.yaml entry with exclude
history:
  exclude:
    domains:
      - automation
      - weblink
      - updater
    entities:
      - sensor.last_boot
      - sensor.date
</code></pre>
<p>Define domains and entities to display by using the <code>include</code> configuration
(aka. whitelist). If you have a lot of entities in your system and your
<code>exclude</code> list is getting too large, it might be better just to define the
entities or domains to <code>include</code>.</p>
<pre><code class="language-yaml"># Example configuration.yaml entry with include
history:
  include:
    domains:
      - sensor
      - switch
      - media_player
</code></pre>
<p>Use the <code>include</code> list to define the domains/entities to display, and exclude
some of them within the <code>exclude</code> list. This makes sense if you, for instance,
include the <code>sensor</code> domain, but want to exclude some specific sensors. Instead
of adding every sensor entity to the <code>include</code> <code>entities</code> list just include the
<code>sensor</code> domain and exclude the sensor entities you are not interested in.
Note that the order of any <code>include</code> <code>entities</code> will be displayed as listed in
the configuration, otherwise, the display order is arbitrary.</p>
<pre><code class="language-yaml"># Example configuration.yaml entry with include and exclude
history:
  include:
    domains:
      - sensor
      - switch
      - media_player
  exclude:
    entities:
     - sensor.last_boot
     - sensor.date
</code></pre>
<p>If you’d like the order of display of the sensors to follow the way they are
listed in the included entity list,
you can set the flag <code>use_include_order</code> to true.</p>
<pre><code class="language-yaml"># Example configuration.yaml entry using specified entity display order
history:
  use_include_order: true
  include:
    entities:
      - sun.sun
      - light.front_porch
</code></pre>
<h4>Implementation details</h4>
<p>The history is stored in a SQLite database <code>home-assistant_v2.db</code> within your
configuration directory unless the <code>recorder</code> integration is set up differently.</p>
<ul>
<li>events table is all events except <code>time_changed</code> that happened while recorder integration was running.</li>
<li>states table contains all the <code>new_state</code> values of <code>state_changed</code> events.</li>
<li>Inside the states table you have:
<ul>
<li><code>entity_id</code>: the entity_id of the entity</li>
<li><code>state</code>: the state of the entity</li>
<li><code>attributes</code>: JSON of the state attributes</li>
<li><code>last_changed</code>: timestamp last time the state has changed. A state_changed event can happen when just attributes change.</li>
<li><code>last_updated</code>: timestamp anything has changed (state, attributes)</li>
<li><code>created</code>: timestamp this entry was inserted into the database</li>
</ul>
</li>
</ul>
<p>When the <code>history</code> integration queries the states table it only selects states
where the state has changed: <code>WHERE last_changed=last_updated</code></p>
<h4>On dates</h4>
<p>SQLite databases do not support native dates. That’s why all the dates are saved
in seconds since the UNIX epoch. Convert them manually using
<a href="https://www.epochconverter.com/">this site</a> or in Python:</p>
<pre><code class="language-python">from datetime import datetime

datetime.fromtimestamp(1422830502)
</code></pre>
<h4>API</h4>
<p>The history information is also available through the
<a href="/developers/rest_api/#get-apihistory">RESTful API</a>.</p>
:ET