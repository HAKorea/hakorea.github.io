I"£<p>Setting up the <a href="http://telldus.com">Tellstick</a> service and tools contained in the <a href="http://developer.telldus.com/">telldus-core</a> package and adding configuration to enable Tellstick and Tellstick Duo to work on your Hass.io.</p>
<p>To use this add-on, you first install it from the list of Built-in add-ons in Hass.io.
After installation you are presented with a default and example configuration, to alter this you must follow both the JSON format and also be aligned with the <a href="http://developer.telldus.com/wiki/TellStick_conf">valid parameters for Tellstick configuration file (tellstick.conf)</a>.</p>
<p>After any changes have been made to the configuration, you need to restart the add-on for the changes to take effect.</p>
<p>You will need to add internal communication details to <code>configuration.yaml</code> to enable the integration from Hass.io and the add-on.</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
tellstick:
    host: core-tellstick
    port: [50800, 50801]
</code></pre>
<p>To add <a href="/integrations/tellstick#light">lights</a>, <a href="/integrations/tellstick#sensor">sensors</a> and <a href="/integrations/tellstick#switch">switches</a> you follow the guidelines for each type individually that is <a href="/integrations/tellstick/">described for Home Assistant</a></p>
<p>The add-on will also enable you to interact with the <code>tdtool</code> via a Home Assistant services call, see example below for self-learning device.</p>
<h2>Examples</h2>
<p>Example for adding more devices in the add-on configuration (note the comma separator between devices):</p>
<pre><code class="language-json">{
  &quot;devices&quot;: [
    {
      &quot;id&quot;: 1,
      &quot;name&quot;: &quot;Outdoor light&quot;,
      &quot;protocol&quot;: &quot;everflourish&quot;,
      &quot;model&quot;: &quot;selflearning-switch&quot;,
      &quot;house&quot;: &quot;A&quot;,
      &quot;unit&quot;: &quot;1&quot;
    },
    {
      &quot;id&quot;: 2,
      &quot;name&quot;: &quot;Hallway dimmer&quot;,
      &quot;protocol&quot;: &quot;risingsun&quot;,
      &quot;model&quot;: &quot;selflearning-dimmer&quot;,
      &quot;house&quot;: &quot;A&quot;,
      &quot;unit&quot;: &quot;2&quot;
    }
  ]
}
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='id' href='#id'></a> id</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Required)</span><span class='description'><p>A number and must be unique for each device.</p>
</span></p></dd><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>A name for easy identification of the device.</p>
</span></p></dd><dt><a class='title-link' name='protocol' href='#protocol'></a> protocol</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>This is the protocol the device uses. More on the different protocols later down.</p>
</span></p></dd><dt><a class='title-link' name='model' href='#model'></a> model</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The model parameter is only used by some protocols where there exists different types of devices using the same protocol. This can be dimmers versus non-dimmers, codeswitch versus self-learning, etc.</p>
</span></p></dd><dt><a class='title-link' name='house' href='#house'></a> house</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Depending on protocol the values here can vary a lot to identify or group per house or type.</p>
</span></p></dd><dt><a class='title-link' name='unit' href='#unit'></a> unit</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Unit identifier, in most cases a value between 1 to 16 and often used in combination with the house.</p>
</span></p></dd><dt><a class='title-link' name='fade' href='#fade'></a> fade</dt><dd><p class='desc'><span class='type'>(<span class='boolean'>boolean</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Fade is either <code>true</code> or <code>false</code> and tells a dimmer if it should fade smooth or instant between values (only for IKEA protocol as it seems).</p>
</span></p><p class='default'>
Default value: <p>false</p>
</p></dd><dt><a class='title-link' name='code' href='#code'></a> code</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>A number series based on ones and zeroes often used for dip-switch based devices.</p>
</span></p></dd></dl>
</div>
<p>For more information about the configuration including protocols, see the <a href="http://developer.telldus.com/wiki/TellStick_conf">telldus documentation</a>.</p>
<h2>Service calls</h2>
<p>If you wish to teach a self-learning device in your TellStick configuration:</p>
<p>Go to Home Assistant service call in Developer tools and select.</p>
<ul>
<li>Service: <code>hassio.addon_stdin</code></li>
<li>Enter service Data:
<code>{&quot;addon&quot;:&quot;core_tellstick&quot;,&quot;input&quot;:{&quot;function&quot;:&quot;learn&quot;,&quot;device&quot;:&quot;1&quot;}}</code></li>
</ul>
<p>Replace <code>1</code> with the corresponding ID of the device in your TellStick configuration.</p>
<p>You can also use this to list devices or sensors and read the output in the add-on log:
<code>{&quot;addon&quot;:&quot;core_tellstick&quot;,&quot;input&quot;:{&quot;function&quot;:&quot;list-sensors&quot;}}</code></p>
<h3>Supported service commands</h3>
<ul>
<li>
<p><code>&quot;function&quot;:&quot;list&quot;</code>: List currently configured devices with name and device id and all discovered sensors.</p>
</li>
<li>
<p><code>&quot;function&quot;:&quot;list-sensors&quot;</code></p>
</li>
<li>
<p><code>&quot;function&quot;:&quot;list-devices&quot;</code>: Alternative devices/sensors listing: Shows devices and/or sensors using key=value format (with tabs as separators, one device/sensor per line, no header lines.)</p>
</li>
<li>
<p><code>&quot;function&quot;:&quot;on&quot;,&quot;device&quot;:&quot;x&quot;</code>: Turns on device. â€™xâ€™ could either be an integer of the device-id, or the name of the device.</p>
</li>
<li>
<p><code>&quot;function&quot;:&quot;off&quot;,&quot;device&quot;:&quot;x&quot;</code>: Turns off device. â€™xâ€™ could either be an integer of the device-id, or the name of the device.</p>
</li>
<li>
<p><code>&quot;function&quot;:&quot;bell&quot;,&quot;device&quot;:&quot;x&quot;</code>: Sends bell command to devices supporting this. â€™xâ€™ could either be an integer of the device-id, or the name of the device.</p>
</li>
<li>
<p><code>&quot;function&quot;:&quot;learn&quot;,&quot;device&quot;:&quot;x&quot;</code>: Sends a special learn command to devices supporting this. This is normally devices of â€™selflearningâ€™ type. â€™xâ€™ could either be an integer of the device-id, or the name of the device.</p>
</li>
</ul>
:ET