I"Ð-<p>The <code>mqtt</code> lock platform lets you control your MQTT enabled locks.</p>
<h2>Configuration</h2>
<p>In an ideal scenario, the MQTT device will have a <code>state_topic</code> to publish state changes. If these messages are published with a <code>RETAIN</code> flag, the MQTT lock will receive an instant state update after subscription and will start with correct state. Otherwise, the initial state of the lock will be <code>false</code> / unlocked.</p>
<p>When a <code>state_topic</code> is not available, the lock will work in optimistic mode. In this mode, the lock will immediately change state after every command. Otherwise, the lock will wait for state confirmation from the device (message from <code>state_topic</code>).</p>
<p>Optimistic mode can be forced, even if state topic is available. Try to enable it, if experiencing incorrect lock operation.</p>
<p>To enable MQTT locks in your installation, add the following to your <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
lock:
  - platform: mqtt
    command_topic: &quot;home/frontdoor/set&quot;
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='command_topic' href='#command_topic'></a> command_topic</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>The MQTT topic to publish commands to change the lock state.</p>
</span></p></dd><dt><a class='title-link' name='state_topic' href='#state_topic'></a> state_topic</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The MQTT topic subscribed to receive state updates.</p>
</span></p></dd><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The name of the lock.</p>
</span></p><p class='default'>
Default value: <p>MQTT Lock</p>
</p></dd><dt><a class='title-link' name='payload_lock' href='#payload_lock'></a> payload_lock</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The payload that represents enabled/locked state.</p>
</span></p><p class='default'>
Default value: <p>LOCK</p>
</p></dd><dt><a class='title-link' name='payload_unlock' href='#payload_unlock'></a> payload_unlock</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The payload that represents disabled/unlocked state.</p>
</span></p><p class='default'>
Default value: <p>UNLOCK</p>
</p></dd><dt><a class='title-link' name='state_locked' href='#state_locked'></a> state_locked</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The value that represents the lock to be in locked state</p>
</span></p><p class='default'>
Default value: <p>locked</p>
</p></dd><dt><a class='title-link' name='state_unlocked' href='#state_unlocked'></a> state_unlocked</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The value that represents the lock to be in unlocked state</p>
</span></p><p class='default'>
Default value: <p>unlocked</p>
</p></dd><dt><a class='title-link' name='optimistic' href='#optimistic'></a> optimistic</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Flag that defines if lock works in optimistic mode.</p>
</span></p><p class='default'>
Default value: <p><code>true</code> if no <code>state_topic</code> defined, else <code>false</code>.</p>
</p></dd><dt><a class='title-link' name='qos' href='#qos'></a> qos</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The maximum QoS level of the state topic.</p>
</span></p><p class='default'>
Default value: <p>0</p>
</p></dd><dt><a class='title-link' name='retain' href='#retain'></a> retain</dt><dd><p class='desc'><span class='type'>(<span class='boolean'>boolean</span>)</span><span class='required'>(Optional)</span><span class='description'><p>If the published message should have the retain flag on or not.</p>
</span></p><p class='default'>
Default value: <p>false</p>
</p></dd><dt><a class='title-link' name='value_template' href='#value_template'></a> value_template</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Defines a <a href="/docs/configuration/templating/#processing-incoming-data">template</a> to extract a value from the payload.</p>
</span></p></dd><dt><a class='title-link' name='availability_topic' href='#availability_topic'></a> availability_topic</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The MQTT topic subscribed to receive availability (online/offline) updates.</p>
</span></p></dd><dt><a class='title-link' name='payload_available' href='#payload_available'></a> payload_available</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The payload that represents the available state.</p>
</span></p><p class='default'>
Default value: <p>online</p>
</p></dd><dt><a class='title-link' name='payload_not_available' href='#payload_not_available'></a> payload_not_available</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The payload that represents the unavailable state.</p>
</span></p><p class='default'>
Default value: <p>offline</p>
</p></dd><dt><a class='title-link' name='json_attributes_topic' href='#json_attributes_topic'></a> json_attributes_topic</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The MQTT topic subscribed to receive a JSON dictionary payload and then set as sensor attributes. Usage example can be found in <a href="/integrations/sensor.mqtt/#json-attributes-topic-configuration">MQTT sensor</a> documentation.</p>
</span></p></dd><dt><a class='title-link' name='json_attributes_template' href='#json_attributes_template'></a> json_attributes_template</dt><dd><p class='desc'><span class='type'>(<span class='template'><a href="/docs/configuration/templating/">template</a></span>)</span><span class='required'>(Optional)</span><span class='description'><p>Defines a <a href="/docs/configuration/templating/#processing-incoming-data">template</a> to extract the JSON dictionary from messages received on the <code>json_attributes_topic</code>. Usage example can be found in <a href="/integrations/sensor.mqtt/#json-attributes-template-configuration">MQTT sensor</a> documentation.</p>
</span></p></dd><dt><a class='title-link' name='unique_id' href='#unique_id'></a> unique_id</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>An ID that uniquely identifies this lock. If two locks have the same unique ID, Home Assistant will raise an exception.</p>
</span></p></dd><dt><a class='title-link' name='device' href='#device'></a> device</dt><dd><p class='desc'><span class='type'>(<span class='map'>map</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Information about the device this lock is a part of to tie it into the <a href="https://developers.home-assistant.io/docs/en/device_registry_index.html">device registry</a>. Only works through <a href="/docs/mqtt/discovery/">MQTT discovery</a> and when <a href="#unique_id"><code>unique_id</code></a> is set.</p>
</span></p></dd><dd><dl class='nested'><dt><a class='title-link' name='identifiers' href='#identifiers'></a> identifiers</dt><dd><p class='desc'><span class='type'>(<span class='string list'>string | list</span>)</span><span class='required'>(Optional)</span><span class='description'><p>A list of IDs that uniquely identify the device. For example a serial number.</p>
</span></p></dd><dt><a class='title-link' name='connections' href='#connections'></a> connections</dt><dd><p class='desc'><span class='type'>(<span class='list'>list</span>)</span><span class='required'>(Optional)</span><span class='description'><p>A list of connections of the device to the outside world as a list of tuples <code>[connection_type, connection_identifier]</code>. For example the MAC address of a network interface: <code>&quot;connections&quot;: [[&quot;mac&quot;, &quot;02:5b:26:a8:dc:12&quot;]]</code>.</p>
</span></p></dd><dt><a class='title-link' name='manufacturer' href='#manufacturer'></a> manufacturer</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The manufacturer of the device.</p>
</span></p></dd><dt><a class='title-link' name='model' href='#model'></a> model</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The model of the device.</p>
</span></p></dd><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The name of the device.</p>
</span></p></dd><dt><a class='title-link' name='sw_version' href='#sw_version'></a> sw_version</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The firmware version of the device.</p>
</span></p></dd></dl></dd></dl>
</div>
<div class='note warning'>
<p>Make sure that your topics match exactly. <code>some-topic/</code> and <code>some-topic</code> are different topics.</p>
</div>
<h2>Examples</h2>
<p>In this section you will find some real-life examples of how to use this lock.</p>
<h3>Full configuration</h3>
<p>The example below shows a full configuration for a MQTT lock.</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
lock:
  - platform: mqtt
    name: Frontdoor
    state_topic: &quot;home-assistant/frontdoor/&quot;
    command_topic: &quot;home-assistant/frontdoor/set&quot;
    payload_lock: &quot;LOCK&quot;
    payload_unlock: &quot;UNLOCK&quot;
    optimistic: false
    qos: 1
    retain: true
    value_template: '{{ value.x }}'
</code></pre>
<p>Keep an eye on retaining messages to keep the state as you donât want to unlock your door by accident when you restart something.</p>
<p>For a check you can use the command line tools <code>mosquitto_pub</code> shipped with <code>mosquitto</code> to send MQTT messages. This allows you to operate your lock manually:</p>
<pre><code class="language-bash">$  mosquitto_pub -h 127.0.0.1 -t home-assistant/frontdoor/set -m &quot;LOCK&quot;
</code></pre>
:ET