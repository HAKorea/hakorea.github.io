I"<p>Load and update configuration files for Home Assistant from a <a href="https://git-scm.com/">Git</a> repository.</p>
<pre><code class="language-json">{
  &quot;git_branch&quot;: &quot;master&quot;,
  &quot;git_command&quot;: &quot;pull&quot;,
  &quot;git_remote&quot;: &quot;origin&quot;,
  &quot;git_prune&quot;: &quot;false&quot;,
  &quot;repository&quot;: &quot;https://example.com/my_configs.git&quot;,
  &quot;auto_restart&quot;: false,
  &quot;restart_ignore&quot;: [
    &quot;ui-lovelace.yaml&quot;,
    &quot;.gitignore&quot;,
    &quot;exampledirectory/&quot;
  ],
  &quot;repeat&quot;: {
    &quot;active&quot;: false,
    &quot;interval&quot;: 300
  },
  &quot;deployment_user&quot;: &quot;&quot;,
  &quot;deployment_password&quot;: &quot;&quot;,
  &quot;deployment_key&quot;: [
&quot;-----BEGIN RSA PRIVATE KEY-----&quot;,
&quot;MIIEowIBAAKCAQEAv3hUrCvqGZKpXQ5ofxTOuH6pYSOZDsCqPqmaGBdUzBFgauQM&quot;,
&quot;xDEcoODGHIsWd7t9meAFqUtKXndeiKjfP0MMKsttnDohL1kb9mRvHre4VUqMsT5F&quot;,
&quot;...&quot;,
&quot;i3RUtnIHxGi1NqknIY56Hwa3id2yk7cEzvQGAAko/t6PCbe20AfmSQczs7wDNtBD&quot;,
&quot;HgXRyIqIXHYk2+5w+N2eunURIBqCI9uWYK/r81TMR6V84R+XhtvM&quot;,
&quot;-----END RSA PRIVATE KEY-----&quot;
  ],
  &quot;deployment_key_protocol&quot;: &quot;rsa&quot;
}
</code></pre>
<ul>
<li><strong>git_branch</strong> (<em>Required</em>): Branch name of the Git repo. If left empty, the currently checked out branch will be updated. Leave this as ‘master’ if you are unsure.</li>
<li><strong>git_command</strong> (<em>Required</em>): <code>pull</code>/<code>reset</code>: Command to run. Leave this as <code>pull</code> if you are unsure.</li>
</ul>
<ul>
<li><strong>pull</strong>: Incorporates changes from a remote repository into the current branch. Will preserve any local changes to tracked files.</li>
<li><strong>reset</strong>: Will execute <code>git reset --hard</code> and overwrite any local changes to tracked files and update from the remote repository. Use with caution.</li>
</ul>
<div class='note warning'>
<p>Using the <code>reset</code> option will overwrite changes to tracked files. Tracked files are those visible in the git repository or those given by the output on this command: <code>git ls-tree -r master --name-only</code>.</p>
</div>
<ul>
<li>
<p><strong>git_remote</strong> (<em>Required</em>): Name of the tracked repository. Leave this as <code>origin</code> if you are unsure.</p>
</li>
<li>
<p><strong>git_prune</strong> (<em>Required</em>): <code>true</code>/<code>false</code>: If set to true, the add-on will clean-up branches that are deleted on the remote repository, but still have cached entries on the local machine. Leave this as <code>false</code> if you are unsure.</p>
</li>
<li>
<p><strong>repository</strong> (<em>Required</em>): Git URL to your repository (make sure to use double quotes). You have to add <code>.git</code> to your repository URL (see example configuration).</p>
</li>
<li>
<p><strong>auto_restart</strong> (<em>Required</em>): <code>true</code>/<code>false</code>: Restart Home Assistant when the configuration has changed (and is valid).</p>
</li>
<li>
<p><strong>restart_ignore</strong> (<em>Optional</em>): When <code>auto_restart</code> is enabled, changes to these files will not make HA restart. Full directories to ignore can be specified.</p>
</li>
<li>
<p><strong>repeat</strong>: Poll the repository for updates periodically automatically.</p>
</li>
</ul>
<ul>
<li><strong>active</strong> (<em>Required</em>): <code>true</code>/<code>false</code>: Enable/disable automatic polling.</li>
<li><strong>interval</strong> (<em>Required</em>): The interval in seconds to poll the repo for if automatic polling is enabled.</li>
</ul>
<ul>
<li>
<p><strong>deployment_user</strong> (<em>Optional</em>): Username to use when authenticating to a repository with a username and password.</p>
</li>
<li>
<p><strong>deployment_password</strong> (<em>Optional</em>): Password to use when authenticating to a repository.  Ignored if <code>deployment_user</code> is not set.</p>
</li>
<li>
<p><strong>deployment_key</strong> (<em>Optional</em>): A private SSH key that will be used for communication during Git operations. This key is mandatory for ssh-accessed repositories, which are the ones with the following pattern: <code>&lt;user&gt;@&lt;host&gt;:&lt;repository path&gt;</code>. This key has to be created without a passphrase.</p>
</li>
<li>
<p><strong>deployment_key_protocol</strong> (<em>Optional</em>): The key protocol. Default is <code>rsa</code>. Valid protocols are:</p>
<ul>
<li><strong>dsa</strong></li>
<li><strong>ecdsa</strong></li>
<li><strong>ed25519</strong></li>
<li><strong>rsa</strong></li>
</ul>
</li>
</ul>
<p>The protocol is typically known by the suffix of the private key –e.g., a key file named <code>id_rsa</code> will be a private key using <code>rsa</code> protocol.</p>
<div class='note warning'>
<p>You should only use this add-on if you do not have an existing configuration or if your existing configuration is already in a Git repository. If the script does not find the necessary Git files in your configuration folder, it will delete anything that might be there. Please ensure that there is a <code>.git</code> folder before using this. You can verify this by listing the items in the configuration folder including hidden files. The command is <code>ls -a /config</code>.</p>
</div>
:ET