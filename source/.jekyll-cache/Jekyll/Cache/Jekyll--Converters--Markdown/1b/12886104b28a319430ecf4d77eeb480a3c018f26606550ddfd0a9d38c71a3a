I"W<p>The <a href="https://www.arduino.cc/">Arduino</a> device family are microcontroller boards that are often based on the ATmega328 chip. They come with digital input/output pins (some can be used as PWM outputs), analog inputs, and a USB connection.
The equipment depends on the <a href="https://www.arduino.cc/en/Main/Products">type</a> of the board. The most common ones are the Arduino Uno and the Arduino Leonardo with 14 digital input/output pins and 6 analog input pins.</p>
<p>There are a lot of extensions (so-called <a href="https://www.arduino.cc/en/Main/ArduinoShields">shields</a>) available. Those shields can be plugged-in into the existing connectors and stacked on top of each other. This makes it possible to expand the capabilities of the Arduino boards.</p>
<p>The <code>arduino</code> integration is designed to let you use a directly attached board to your Home Assistant host over USB.</p>
<p>There is currently support for the following device types within Home Assistant:</p>
<ul>
<li><a href="#sensor">Sensor</a></li>
<li><a href="#switch">Switch</a></li>
</ul>
<h2>Configuration</h2>
<p>You need to have the <a href="https://github.com/firmata/">Firmata firmware</a> on your board. Please upload the <code>StandardFirmata</code> sketch to your board; please refer to the <a href="https://www.arduino.cc/en/Main/Howto">Arduino documentation</a> for further information.</p>
<p>To integrate an Arduino boards with Home Assistant, add the following section to your <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
arduino:
  port: /dev/ttyACM0
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='port' href='#port'></a> port</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>The port where your board is connected to your Home Assistant host. If you are using an original Arduino, the port will be named <code>ttyACM*</code> otherwise <code>ttyUSB*</code>.</p>
</span></p></dd></dl>
</div>
<p>The exact number can be determined with the command shown below.</p>
<pre><code class="language-bash">$ ls /dev/ttyACM*
</code></pre>
<p>If thatâ€™s not working, check your <code>dmesg</code> or <code>journalctl -f</code> output. Keep in mind that Arduino clones are often using a different name for the port (e.g., <code>/dev/ttyUSB*</code>).</p>
<div class='note warning'>
A word of caution: The Arduino boards are not storing states. This means that with every initialization the pins are set to off/low.
</div>
<p>Add the user who is used to run Home Assistant to the groups to allow access to the serial port.</p>
<pre><code class="language-bash">$ sudo usermod -a -G dialout,lock $USER
</code></pre>
<h2>Sensor</h2>
<p>The <code>arduino</code> sensor platform allows you to get numerical values from an analog input pin of an <a href="https://www.arduino.cc/">Arduino</a> board. Usually the value is between 0 and 1024.</p>
<p>To enable an Arduino sensor with Home Assistant, add the following section to your <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
sensor:
  platform: arduino
  pins:
    1:
      name: Door switch
    0:
      name: Brightness
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='pins' href='#pins'></a> pins</dt><dd><p class='desc'><span class='type'>(<span class='map'>map</span>)</span><span class='required'>(Required)</span><span class='description'><p>List of pins to use.</p>
</span></p></dd><dd><dl class='nested'><dt><a class='title-link' name='pin_number' href='#pin_number'></a> pin_number</dt><dd><p class='desc'><span class='type'>(<span class='map'>map</span>)</span><span class='required'>(Required)</span><span class='description'><p>The pin number that corresponds with the pin numbering schema of your board.</p>
</span></p></dd><dd><dl class='nested'><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='description'><p>Name that will be used in the frontend for the pin.</p>
</span></p></dd></dl></dd></dl></dd></dl>
</div>
<p>The 6 analog pins of an Arduino UNO are numbered from A0 to A5.</p>
<h2>Switch</h2>
<p>The <code>arduino</code> switch platform allows you to control the digital pins of your <a href="https://www.arduino.cc/">Arduino</a> board. Support for switching pins is limited to high/on and low/off of the digital pins. PWM (pin 3, 5, 6, 9, 10, and 11 on an Arduino Uno) is not supported yet.</p>
<p>To enable the Arduino pins with Home Assistant, add the following section to your <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
switch:
  platform: arduino
  pins:
    11:
      name: Fan Office
    12:
      name: Light Desk
      initial: true
      negate: true
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='pins' href='#pins'></a> pins</dt><dd><p class='desc'><span class='type'>(<span class='map'>map</span>)</span><span class='required'>(Required)</span><span class='description'><p>List of of pins to use.</p>
</span></p></dd><dd><dl class='nested'><dt><a class='title-link' name='pin_number' href='#pin_number'></a> pin_number</dt><dd><p class='desc'><span class='type'>(<span class='map'>map</span>)</span><span class='required'>(Required)</span><span class='description'><p>The pin number that corresponds with the pin numbering schema of your board.</p>
</span></p></dd><dd><dl class='nested'><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Name that will be used in the frontend for the pin.</p>
</span></p></dd><dt><a class='title-link' name='initial' href='#initial'></a> initial</dt><dd><p class='desc'><span class='type'>(<span class='boolean'>boolean</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The initial value for this port.</p>
</span></p><p class='default'>
Default value: <p>false</p>
</p></dd><dt><a class='title-link' name='negate' href='#negate'></a> negate</dt><dd><p class='desc'><span class='type'>(<span class='boolean'>boolean</span>)</span><span class='required'>(Optional)</span><span class='description'><p>If this pin should be inverted.</p>
</span></p><p class='default'>
Default value: <p>false</p>
</p></dd></dl></dd></dl></dd></dl>
</div>
<p>The digital pins are numbered from 0 to 13 on a Arduino UNO. The available pins are 2 till 13. For testing purposes you can use pin 13 because with that pin you can control the internal LED.</p>
:ET