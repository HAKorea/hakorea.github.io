I""<p><a href="https://snips.ai/">Snips.ai</a> is an AI-powered voice assistant that runs on the Raspberry Pi 3 and x86 platforms. It runs on-device and is Private by Design.</p>
<div class='warning note'>
<p>The Snips add-on depends on the Mosquitto add on to bridge to Home Assistant, so make sure that is installed.</p>
</div>
<p>Home Assistant comes with certain Intents builtin to handle common tasks. A complete list of Intents can be found in this wiki <a href="https://github.com/tschmidty69/hass-snips-bundle-intents/wiki">Hass Snips Bundle</a>.</p>
<p>The Snips add-on by default comes with an assistant that allows you to turn on lights or switches, open covers, or add and list items to a <a href="/integrations/shopping_list/">Shopping List</a> if that integration is enabled.</p>
<p>If using a USB microphone and speakers plugged into the Raspberry Pi output, Snips will work without any change to the configuration. Trying saying things like:</p>
<pre><code class="language-txt">Turn on kitchen light
Open garage door
What is on my shopping list
</code></pre>
<p>To get started creating your own configuration, follow <a href="https://docs.snips.ai/getting-started/quick-start-console">their tutorial</a> to create an assistant and download the training data. You can also add the Home Assistant Skill to your assistant to enable the built-in intents, and add or create your own intents to do more complex tasks.</p>
<p>Now install and activate the <a href="/addons/samba/">Samba</a> add-on so you can upload your training data. Connect to the “share” Samba share and copy your assistant over. Name the file <code>assistant.zip</code> or whatever you have configured in the configuration options.</p>
<p>Now it’s time to start Snips for the first time. You can configure the microphone and sound card using the Add-on interface. Now start the add-on.</p>
<h3>Add-On configuration</h3>
<pre><code class="language-json">{
  &quot;mqtt_bridge&quot;: {
    &quot;active&quot;: true,
    &quot;host&quot;: &quot;172.17.0.1&quot;,
    &quot;port&quot;: 1883,
    &quot;user&quot;: &quot;&quot;,
    &quot;password&quot;: &quot;&quot;
  },
  &quot;assistant&quot;: &quot;assistant.zip&quot;,
  &quot;language&quot;: &quot;en&quot;,
  &quot;custom_tts&quot;: false,
  &quot;tts_platform&quot;: &quot;amazon_polly&quot;
}
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='assistant' href='#assistant'></a> assistant</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='description'><p>The name of your custom assistant in <code>/share</code>. If no assistant is found then a default assistant will be used.</p>
</span></p></dd><dt><a class='title-link' name='language' href='#language'></a> language</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='description'><p>Language. This is used to select the default custom assistant, Currently <code>en</code>, <code>de</code> and <code>fr</code> are supported.</p>
</span></p></dd><dt><a class='title-link' name='custom_tts' href='#custom_tts'></a> custom_tts</dt><dd><p class='desc'><span class='type'>(<span class='boolean'>boolean</span>)</span><span class='description'><p>Whether to use a TTS provider from Home Assistant for a variety of voices.</p>
</span></p><p class='default'>
Default value: <p>false</p>
</p></dd><dt><a class='title-link' name='tts_platform' href='#tts_platform'></a> tts_platform</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='description'><p>Which TTS platform to use.</p>
</span></p></dd></dl>
</div>
<h3>Home Assistant configuration</h3>
<p>A simple configuration just requires this. Consult <a href="/integrations/snips/">Snips.ai integration</a> for more options.</p>
<pre><code class="language-yaml">snips:
</code></pre>
<h3>Home Assistant configuration</h3>
<p>There is an active <a href="https://discordapp.com/invite/3939Kqx">discord</a> channel and <a href="https://forum.snips.ai/">Snips forum</a> for further support.</p>
<h3>Examples</h3>
<p>So now you can turn lights on and off, let’s check the weather. Log on to the <a href="https://console.snips.ai/">console</a>. If this is your first time, create a new assistant and add the Home Assistant skill, along with the Weather skill by snips. Download your assistant manually and copy it to the <code>/share</code> folder on your Hass.io installation using the Samba add-on.</p>
<p>Next create a weather sensor, e.g., one for <a href="/integrations/darksky/">Dark Sky</a>, and put the <code>api_key</code> in your <code>secrets.yaml</code> file. For this example to work you will need to have a valid API key from <a href="https://darksky.net/dev">Dark Sky</a>.</p>
<pre><code class="language-yaml">- platform: darksky
  name: &quot;Dark Sky Weather&quot;
  api_key: !secret dark_sky_key
  update_interval:
    minutes: 10
  monitored_conditions:
    - summary
    - hourly_summary
    - temperature
    - temperature_max
    - temperature_min
</code></pre>
<p>Next add this to your <code>configuration.yaml</code> file to reference a new <code>intent_script</code> integration. This is a good practice to <a href="/docs/configuration/splitting_configuration/">split your configuration files</a> up.</p>
<pre><code class="language-yaml">intent_script: !include intent_script.yaml
</code></pre>
<p>Finally, create this <code>intent_script.yaml</code> file in your configuration directory.</p>
<pre><code class="language-yaml">searchWeatherForecast:
  speech:
    type: plain
    text: &gt;
      The weather is currently
      {{ states('sensor.dark_sky_weather_temperature') | round(0) }}
      degrees outside and {{ states('sensor.dark_sky_weather_summary') }}.
      The high today will be
      {{ states('sensor.dark_sky_weather_daily_high_temperature') | round(0)}}
      and {{ states('sensor.dark_sky_weather_hourly_summary') }}
</code></pre>
<p>Now just restart Hass.io and ask it what the weather is like.</p>
:ET