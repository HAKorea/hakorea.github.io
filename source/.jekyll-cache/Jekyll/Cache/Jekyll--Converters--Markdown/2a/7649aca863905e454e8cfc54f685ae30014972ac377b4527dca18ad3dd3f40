I"I.<p>The <code>manual</code> alarm control panel platform enables you to set manual alarms in Home Assistant.</p>
<h2>Configuration</h2>
<p>To enable this, add the following lines to your <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
alarm_control_panel:
  - platform: manual
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The name of the alarm.</p>
</span></p><p class='default'>
Default value: <p>HA Alarm</p>
</p></dd><dt><a class='title-link' name='code' href='#code'></a> code</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Exclusive)</span><span class='description'><p>If defined, specifies a code to enable or disable the alarm in the frontend. Only one of <strong>code</strong> and <strong>code_template</strong> can be specified.</p>
</span></p></dd><dt><a class='title-link' name='code_template' href='#code_template'></a> code_template</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Exclusive)</span><span class='description'><p>If defined, returns a code to enable or disable the alarm in the frontend; an empty string disables checking the code. Inside the template, the variables <strong>from_state</strong> and <strong>to_state</strong> identify the current and desired state. Only one of <strong>code</strong> and <strong>code_template</strong> can be specified.</p>
</span></p></dd><dt><a class='title-link' name='code_arm_required' href='#code_arm_required'></a> code_arm_required</dt><dd><p class='desc'><span class='type'>(<span class='boolean'>boolean</span>)</span><span class='required'>(Optional)</span><span class='description'><p>If true, the code is required to arm the alarm.</p>
</span></p><p class='default'>
Default value: <p>true</p>
</p></dd><dt><a class='title-link' name='delay_time' href='#delay_time'></a> delay_time</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The time in seconds of the pending time before triggering the alarm.</p>
</span></p><p class='default'>
Default value: <p>0</p>
</p></dd><dt><a class='title-link' name='pending_time' href='#pending_time'></a> pending_time</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The time in seconds of the pending time before effecting a state change.</p>
</span></p><p class='default'>
Default value: <p>60</p>
</p></dd><dt><a class='title-link' name='trigger_time' href='#trigger_time'></a> trigger_time</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The time in seconds of the trigger time in which the alarm is firing.</p>
</span></p><p class='default'>
Default value: <p>120</p>
</p></dd><dt><a class='title-link' name='disarm_after_trigger' href='#disarm_after_trigger'></a> disarm_after_trigger</dt><dd><p class='desc'><span class='type'>(<span class='boolean'>boolean</span>)</span><span class='required'>(Optional)</span><span class='description'><p>If true, the alarm will automatically disarm after it has been triggered instead of returning to the previous state.</p>
</span></p><p class='default'>
Default value: <p>false</p>
</p></dd><dt><a class='title-link' name='armed_custom_bypassarmed_homearmed_awayarmed_nightdisarmedtriggered' href='#armed_custom_bypassarmed_homearmed_awayarmed_nightdisarmedtriggered'></a> armed_custom_bypass/armed_home/armed_away/armed_night/disarmed/triggered</dt><dd><p class='desc'><span class='type'>(<span class='list'>list</span>)</span><span class='required'>(Optional)</span><span class='description'><p>State specific settings</p>
</span></p></dd><dd><dl class='nested'><dt><a class='title-link' name='delay_time' href='#delay_time'></a> delay_time</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>State specific setting for <strong>delay_time</strong> (all states except <strong>triggered</strong>)</p>
</span></p></dd><dt><a class='title-link' name='pending_time' href='#pending_time'></a> pending_time</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>State specific setting for <strong>pending_time</strong> (all states except <strong>disarmed</strong>)</p>
</span></p></dd><dt><a class='title-link' name='trigger_time' href='#trigger_time'></a> trigger_time</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>State specific setting for <strong>trigger_time</strong> (all states except <strong>triggered</strong>)</p>
</span></p></dd></dl></dd></dl>
</div>
<h2>State machine</h2>
<p>The state machine of the manual alarm integration is complex but powerful.  The
transitions are timed according to three values, <strong>delay_time</strong>, <strong>pending_time</strong>
and <strong>trigger_time</strong>.  The values in turn can come from the default configuration
variable or from a state-specific override.</p>
<p>When the alarm is armed, its state first goes to <strong>pending</strong> for a number
of seconds equal to the destination state’s <strong>pending_time</strong>, and then
transitions to one of the “armed” states.  Note that <strong>code_template</strong>
never receives “pending” in the <strong>to_state</strong> variable; instead,
<strong>to_state</strong> contains the state which the user has requested.  However,
<strong>from_state</strong> <em>can</em> contain “pending”.</p>
<p>When the alarm is triggered, its state goes to <strong>pending</strong> for a number of
seconds equal to the previous state’s <strong>delay_time</strong> plus the triggered
state’s <strong>pending_time</strong>.  Then the alarm transitions to the “triggered”
states.  The code is never checked when triggering the alarm, so the
<strong>to_state</strong> variable of <strong>code_template</strong> cannot ever contain “triggered”
either; again, <strong>from_state</strong> <em>can</em> contain “triggered”.</p>
<p>The alarm remains in the “triggered” state for a number of seconds equal to the
previous state’s <strong>trigger_time</strong>.  Then, depending on <strong>disarm_after_trigger</strong>,
it goes back to either the previous state or <strong>disarmed</strong>.  If the previous
state’s <strong>trigger_time</strong> is zero, the transition to “triggered” is entirely
blocked and the alarm remains in the armed state.</p>
<p>Each of the settings is useful in different scenarios.  <strong>pending_time</strong> gives
you some time to leave the building (for “armed” states) or to disarm the alarm
(for the “triggered” state).</p>
<p><strong>delay_time</strong> can also be used to allow some time to disarm the alarm, but with
more flexibility.  For example, you could specify a delay time for the
“armed away” state, in order to avoid triggering the alarm while the
garage door opens, but not for the “armed home” state.</p>
<p><strong>trigger_time</strong> is useful to disable the alarm when disarmed, but it can also
be used for example to sound the siren for a shorter time during the night.</p>
<h2>Examples</h2>
<p>In the config example below:</p>
<ul>
<li>the disarmed state never triggers the alarm;</li>
<li>the armed_home state will leave no time to leave the building or disarm the alarm;</li>
<li>while other states state will give 30 seconds to leave the building before triggering the alarm, and 20 seconds to disarm the alarm when coming back.</li>
</ul>
<pre><code class="language-yaml"># Example configuration.yaml entry
alarm_control_panel:
  - platform: manual
    name: Home Alarm
    code: 1234
    pending_time: 30
    delay_time: 20
    trigger_time: 4
    disarmed:
      trigger_time: 0
    armed_home:
      pending_time: 0
      delay_time: 0
</code></pre>
<p>In the rest of this section, you find some real-life examples on how to use this panel.</p>
<h3>Sensors</h3>
<p>Using sensors to trigger the alarm.</p>
<pre><code class="language-yaml">automation:
- alias: 'Trigger alarm while armed away'
  trigger:
    - platform: state
      entity_id: sensor.pir1
      to: 'active'
    - platform: state
      entity_id: sensor.pir2
      to: 'active'
    - platform: state
      entity_id: sensor.door
      to: 'open'
    - platform: state
      entity_id: sensor.window
      to: 'open'
  condition:
    - condition: state
      entity_id: alarm_control_panel.ha_alarm
      state: armed_away
  action:
    service: alarm_control_panel.alarm_trigger
    entity_id: alarm_control_panel.ha_alarm
</code></pre>
<p>Sending a notification when the alarm is triggered.</p>
<pre><code class="language-yaml">automation:
  - alias: 'Send notification when alarm triggered'
    trigger:
      - platform: state
        entity_id: alarm_control_panel.ha_alarm
        to: 'triggered'
    action:
      - service: notify.notify
        data:
          message: &quot;ALARM! The alarm has been triggered&quot;
</code></pre>
<p>Disarming the alarm when the door is properly unlocked.</p>
<pre><code class="language-yaml">automation:
  - alias: 'Disarm alarm when door unlocked by keypad'
    trigger:
      - platform: state
        entity_id: sensor.front_door_lock_alarm_type
        to: '19'
        # many z-wave locks use Alarm Type 19 for 'Unlocked by Keypad'
    action:
      - service: alarm_control_panel.alarm_disarm
        entity_id: alarm_control_panel.house_alarm
</code></pre>
<p>Sending a Notification when the Alarm is Armed (Away/Home), Disarmed and in Pending Status</p>
<pre><code class="language-yaml">- alias: 'Send notification when alarm is Disarmed'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'disarmed'
  action:
    - service: notify.notify
      data_template:
        message: &quot;ALARM! The alarm is Disarmed at {{ states('sensor.date_time') }}&quot;
</code></pre>
<pre><code class="language-yaml">- alias: 'Send notification when alarm is in pending status'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'pending'
  action:
    - service: notify.notify
      data_template:
        message: &quot;ALARM! The alarm is in pending status at {{ states('sensor.date_time') }}&quot;
</code></pre>
<pre><code class="language-yaml">- alias: 'Send notification when alarm is Armed in Away mode'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'armed_away'
  action:
    - service: notify.notify
      data_template:
        message: &quot;ALARM! The alarm is armed in Away mode {{ states('sensor.date_time') }}&quot;
</code></pre>
<pre><code class="language-yaml">- alias: 'Send notification when alarm is Armed in Home mode'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'armed_home'
  action:
    - service: notify.notify
      data_template:
        # Using multi-line notation allows for easier quoting
        message: &gt;
          ALARM! The alarm is armed in Home mode {{ states('sensor.date_time') }}
</code></pre>
:ET