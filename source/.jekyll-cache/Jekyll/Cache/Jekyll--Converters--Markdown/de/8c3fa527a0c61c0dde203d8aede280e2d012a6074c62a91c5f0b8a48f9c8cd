I"<p>The <code>statistics</code> sensor platform consumes the state from other sensors. It exports the <code>mean</code> value as state and the following values as attributes: <code>count</code>, <code>mean</code>, <code>median</code>, <code>stdev</code>, <code>variance</code>, <code>total</code>, <code>min_value</code>, <code>max_value</code>, <code>min_age</code>, <code>max_age</code>, <code>change</code>, <code>average_change</code> and <code>change_rate</code>. If itâ€™s a binary sensor then only state changes are counted.</p>
<p>If you are running the <a href="/integrations/recorder/">recorder</a> component, on startup the data is read from the database. So after a restart of the platform, you will immediately have data available. If youâ€™re using the <a href="/integrations/history/">history</a> component, this will automatically also start the <code>recorder</code> integration on startup.
If you are <em>not</em> running the <code>recorder</code> component, it can take time till the sensor starts to work because a couple of attributes need more than one value to do the calculation.</p>
<h2>Configuration</h2>
<p>To enable the statistics sensor, add the following lines to your <code>configuration.yaml</code>:</p>
<pre><code class="language-yaml"># enable the recorder integration (optional)
recorder:

# Example configuration.yaml entry
sensor:
  - platform: statistics
    entity_id: sensor.cpu
  - platform: statistics
    entity_id: binary_sensor.movement
    max_age:
      minutes: 30
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='entity_id' href='#entity_id'></a> entity_id</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>The entity to monitor. Only <a href="/integrations/sensor/">sensors</a> and <a href="/integrations/binary_sensor/">binary sensor</a>.</p>
</span></p></dd><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Name of the sensor to use in the frontend.</p>
</span></p><p class='default'>
Default value: <p>Stats</p>
</p></dd><dt><a class='title-link' name='sampling_size' href='#sampling_size'></a> sampling_size</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Size of the sampling. If the limit is reached then the values are rotated.</p>
</span></p><p class='default'>
Default value: <p>20</p>
</p></dd><dt><a class='title-link' name='max_age' href='#max_age'></a> max_age</dt><dd><p class='desc'><span class='type'>(<span class='time'>time</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Maximum age of measurements. Setting this to a time interval will cause older values to be discarded.</p>
</span></p></dd><dt><a class='title-link' name='precision' href='#precision'></a> precision</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Defines the precision of the calculated values, through the argument of round().</p>
</span></p><p class='default'>
Default value: <p>2</p>
</p></dd></dl>
</div>
<p class='img'>
  <img src='/images/screenshots/stats-sensor.png' />
</p>
:ET