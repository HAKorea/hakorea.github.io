I"£<p>The <code>pvoutput</code> sensor platform consumes information from <a href="https://pvoutput.org/">PVOutput</a> which were uploaded by your solar photovoltaic (PV) system.</p>
<p>To add PVOutput details to your installation, add the following to your <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
sensor:
  - platform: pvoutput
    system_id: YOUR_SYSTEM_ID
    api_key: YOUR_API_KEY
    scan_interval: 120
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='api_key' href='#api_key'></a> api_key</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>Your API key. A read-only key is fine.</p>
</span></p></dd><dt><a class='title-link' name='system_id' href='#system_id'></a> system_id</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>The ID of your station.</p>
</span></p></dd><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Name of the sensor.</p>
</span></p><p class='default'>
Default value: <p>PVOutput</p>
</p></dd></dl>
</div>
<div class='note warning'>
<p>Itâ€™s recommended to set <code>scan_interval:</code> according to a value greater than 60 seconds. The service only allows 60 requests per hour but the sensorâ€™s default is 30 seconds.</p>
</div>
<p>To format the PVoutput sensor itâ€™s recommended to use the <a href="/topics/templating/">template component</a>. For example:</p>
<pre><code class="language-yaml">sensor:
  - platform: pvoutput
    system_id: YOUR_SYSTEM_ID
    api_key: YOUR_API_KEY
    scan_interval: 150
  - platform: template
    sensors:
      power_consumption:
        value_template: '{% if is_state_attr(&quot;sensor.pvoutput&quot;, &quot;power_consumption&quot;, &quot;NaN&quot;) %}0{% else %}{{ state_attr('sensor.pvoutput', 'power_consumption') }}{% endif %}'
        friendly_name: 'Using'
        unit_of_measurement: 'Watt'
      energy_consumption:
        value_template: '{{ &quot;%0.1f&quot;|format(state_attr('sensor.pvoutput', 'energy_consumption')|float/1000) }}'
        friendly_name: 'Used'
        unit_of_measurement: 'kWh'
      power_generation:
        value_template: '{% if is_state_attr(&quot;sensor.pvoutput&quot;, &quot;power_generation&quot;, &quot;NaN&quot;) %}0{% else %}{{ state_attr('sensor.pvoutput', 'power_generation') }}{% endif %}'
        friendly_name: 'Generating'
        unit_of_measurement: 'Watt'
      energy_generation:
        value_template: '{% if is_state_attr(&quot;sensor.pvoutput&quot;, &quot;energy_generation&quot;, &quot;NaN&quot;) %}0{% else %}{{ &quot;%0.2f&quot;|format(state_attr('sensor.pvoutput', 'energy_generation')|float/1000) }}{% endif %}'
        friendly_name: 'Generated'
        unit_of_measurement: 'kWh'
</code></pre>
:ET