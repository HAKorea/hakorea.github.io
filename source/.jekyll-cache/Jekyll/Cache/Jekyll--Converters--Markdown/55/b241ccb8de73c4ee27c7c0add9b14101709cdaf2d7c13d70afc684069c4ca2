I"…<h3>Android and iOS Devices</h3>
<p>The <a href="https://companion.home-assistant.io/">Home Assistant Companion Apps</a> for iOS and Android pass the current battery level to Home Assistant with every location update. The default name of the sensor used is <code>sensor.battery_level</code>.</p>
<h3>iOS Devices</h3>
<p>If you have a device running iOS (iPhone, iPad, etc), The <a href="/integrations/icloud">iCloud</a> integration is gathering various details about your device including the battery level. To display it in the Frontend use a <a href="/integrations/template">template sensor</a>. You can also use the <code>battery</code> <a href="/integrations/sensor/#device-class">sensor device class</a> to dynamically change the icon with the battery level.</p>
<pre><code class="language-yaml">sensor:
  - platform: template
    sensors:
      battery_iphone:
        friendly_name: iPhone Battery
        unit_of_measurement: '%'
        value_template: &gt;-
            {%- if state_attr('device_tracker.iphone', 'battery') %}
                {{ state_attr('device_tracker.iphone', 'battery')|round }}
            {% else %}
                {{ states('sensor.battery_iphone') }}
            {%- endif %}
        device_class: battery
</code></pre>
<h3>Android Devices</h3>
<p>On your Android device, once the official <a href="https://companion.home-assistant.io/">Home Assistant companion app</a> is installed and connected to your Home Assistance instance, you will be able to display the battery level in the frontend by adding a <a href="/integrations/template">template sensor</a> to your configuration YAML file. You can also use the battery <a href="/integrations/sensor/#device-class">sensor device class</a> to dynamically change the icon with the battery level.</p>
<pre><code class="language-yaml">sensor:
  - platform: template
    sensors:
      battery_phone:
        friendly_name: AndroidPhone Battery
        unit_of_measurement: '%'
        value_template: &gt;-
            {%- if state_attr('device_tracker.xxxxx', 'battery_level') %}
                {{ state_attr('device_tracker.xxxxx', 'battery_level')|round }}
            {% else %}
                {{ states('device_tracker.xxxxx') }}
            {%- endif %}
        device_class: battery
</code></pre>
<p>Replace â€˜device_tracker.xxxxxâ€™ with your phone name as shown under Configuration/Devices Device Info/Entities, for example: â€˜device_tracker.mi_a1â€™</p>
<h4>MQTT</h4>
<p>If you have configured Owntracks to send reports via MQTT you can use the received data via a MQTT sensor.
Replace username with your MQTT username (for the embedded MQTT itâ€™s simply homeassistant), and deviceid with the set Device ID in Owntracks.</p>
<pre><code class="language-yaml">sensor:
  - platform: mqtt
    state_topic: &quot;owntracks/username/deviceid&quot;
    name: &quot;Battery Tablet&quot;
    unit_of_measurement: &quot;%&quot;
    value_template: '{{ value_json.batt }}'
    device_class: battery
</code></pre>
<h4>HTTP</h4>
<p>If you have configured Owntracks to send reports to your Home Assistant instance via HTTP you can use a template sensor.
Replace <code>deviceid</code> with the set Device ID in Owntracks.</p>
<pre><code class="language-yaml">sensor:
- platform: template
    sensors:
      your_battery_sensor_name:
        value_template: &quot;{{ state_attr('device_tracker.deviceid', 'battery_level') }}&quot;
        unit_of_measurement: '%'
</code></pre>
:ET