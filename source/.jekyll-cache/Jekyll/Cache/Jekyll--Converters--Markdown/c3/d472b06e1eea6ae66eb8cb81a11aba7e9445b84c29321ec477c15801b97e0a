I"¥<p>The Time of Flight sensor uses an invisible laser to measure distance with millimeter resolution.</p>
<p>Tested devices:</p>
<ul>
<li><a href="https://www.raspberrypi.org/">Raspberry Pi</a></li>
<li><a href="https://www.st.com/en/imaging-and-photonics-solutions/vl53l1x.html">VL53L1X</a></li>
<li><a href="https://cdn.sparkfun.com/assets/3/5/c/e/2/Qwiic_Distance_Sensor_-_VL53L1X.pdf">Schematic</a></li>
</ul>
<h2>Configuration</h2>
<p>To use the VL53L1X sensor in your installation, add to your <code>configuration.yaml</code>:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
sensor:
  - platform: tof
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Name of the sensor.</p>
</span></p><p class='default'>
Default value: <p>VL53L1X</p>
</p></dd><dt><a class='title-link' name='i2c_bus' href='#i2c_bus'></a> i2c_bus</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>I2c bus used.</p>
</span></p><p class='default'>
Default value: <p>1, for Raspberry Pi 2 and 3.</p>
</p></dd><dt><a class='title-link' name='i2c_address' href='#i2c_address'></a> i2c_address</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>I2c address of the sensor.</p>
</span></p><p class='default'>
Default value: <p>0x29</p>
</p></dd><dt><a class='title-link' name='xshut' href='#xshut'></a> xshut</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>GPIO port used to reset device.</p>
</span></p><p class='default'>
Default value: <p>16</p>
</p></dd></dl>
</div>
<h2>Example</h2>
<p>The distance is measured in millimeters, according to the VL53L1X specifications.</p>
<pre><code class="language-yaml"># Example of customized configuration.yaml entry
sensor:
  - platform: tof
    name: ToF sensor
    i2c_address: 0x29
    xshut: 16
</code></pre>
<p>Several devices may be attached and a GPIO port from RPI is used for reset. XSHUT signal is generated pulsing LOW at initialization and after that, it is kept HIGH all time. This version uses VL53L1X long-range mode that may reach up to 4 meters.</p>
<h2>Directions for installing i2c on Raspberry Pi</h2>
<p>Enable the I2c interface with the Raspberry Pi configuration utility:</p>
<pre><code class="language-bash"># pi user environment: Enable i2c interface
$ sudo raspi-config
</code></pre>
<p>Select <code>Interfacing options-&gt;I2C</code> choose <code>&lt;Yes&gt;</code> and hit <code>Enter</code>, then go to <code>Finish</code> and youâ€™ll be prompted to reboot.</p>
<p>Install dependencies for use the <code>smbus-cffi</code> module and enable your <em>homeassistant</em> user to join the <em>i2c</em> group:</p>
<pre><code class="language-bash"># pi user environment: Install i2c dependencies and utilities
$ sudo apt-get install build-essential libi2c-dev i2c-tools python-dev libffi-dev

# pi user environment: Add homeassistant user to the i2c group
$ sudo addgroup homeassistant i2c

# pi user environment: Reboot Raspberry Pi to apply changes
$ sudo reboot
</code></pre>
<h3>Check the i2c address of the sensor</h3>
<p>After installing <code>i2c-tools</code>, a new utility is available to scan the addresses of the connected sensors:</p>
<pre><code class="language-bash">$ /usr/sbin/i2cdetect -y 1
</code></pre>
<p>It will output a table like this:</p>
<pre><code class="language-text">     0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f
00:          -- -- -- -- -- -- -- -- -- -- -- -- --
10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
20: -- -- -- 23 -- -- -- -- -- 29 -- -- -- -- -- --
30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
40: 40 -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
70: -- -- -- -- -- -- -- --
</code></pre>
<p>So you can see the sensor address what you are looking for is <strong>0x29</strong> (there are more i2c sensors in this Raspberry Pi).</p>
:ET