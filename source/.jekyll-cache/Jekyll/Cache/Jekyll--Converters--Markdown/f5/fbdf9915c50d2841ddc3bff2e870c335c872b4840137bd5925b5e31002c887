I"\<p>The <code>modem_callerid</code> integration uses an available modem for collecting caller ID information. It requires a Hayes AT compatible modem that supports caller ID detection (via AT+VCID=1).</p>
<p>When the sensor detects a new call, its state changes to â€˜ringâ€™ for each ring and â€˜calleridâ€™ when caller id information is received. It returns to â€˜idleâ€™ once ringing stops. The state event includes an attribute payload that includes the time of the call, name and number.</p>
<h2>Setup</h2>
<p>To find the path of your USB modem, run:</p>
<pre><code class="language-bash">ls /dev/ttyACM*
</code></pre>
<p>If Home Assistant (<code>hass</code>) runs with another user (e.g., <code>homeassistant</code>) give access to the stick with:</p>
<pre><code class="language-bash">sudo usermod -a -G dialout homeassistant
</code></pre>
<p>Depending on whatâ€™s plugged into your USB ports, the name found above may change. You can lock in a name, such as <code>/dev/modem</code>, by following <a href="http://hintshop.ludvig.co.nz/show/persistent-names-usb-serial-devices/">these instructions</a>.</p>
<h2>Configuration</h2>
<p>To enable the sensor, add the following lines to your <code>configuration.yaml</code>:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
sensor:
  - platform: modem_callerid
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Name of the sensor to use in the frontend.</p>
</span></p><p class='default'>
Default value: <p><code>modem_callerid</code></p>
</p></dd><dt><a class='title-link' name='device' href='#device'></a> device</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The port to use.</p>
</span></p><p class='default'>
Default value: <p><code>/dev/ttyACM0</code></p>
</p></dd></dl>
</div>
<p>To find the path of your USB modem, run:</p>
<p><code>$ ls /dev/ttyACM*</code></p>
<p>If Home Assistant (<code>hass</code>) runs with another user (e.g., <code>homeassistant</code>) give access to the stick with:</p>
<p><code>$ sudo usermod -a -G dialout homeassistant</code></p>
<p>Depending on whatâ€™s plugged into your USB ports, the name found above may change. You can lock in a name, such as <code>/dev/modem</code>, by following <a href="http://hintshop.ludvig.co.nz/show/persistent-names-usb-serial-devices/">these instructions</a>.</p>
<h2>Examples</h2>
<p>Some example automations:</p>
<pre><code class="language-yaml">automation:
  - alias: Notify CallerID
    trigger:
      platform: state
      entity_id: sensor.modem_callerid
      to: &quot;callerid&quot;
    action:
      service: notify.notify
      data:
        message: 'Call from {{ state_attr('sensor.modem_callerid', 'cid_name') }} at {{ state_attr('sensor.modem_callerid', 'cid_number') }} '
  - alias: Notify CallerID webui
    trigger:
      platform: state
      entity_id: sensor.modem_callerid
      to: &quot;callerid&quot;
    action:
      service: persistent_notification.create
      data:
        title: &quot;Call from&quot;
        message: '{{ state_attr('sensor.modem_callerid', 'cid_time').strftime(&quot;%I:%M %p&quot;) }} {{ state_attr('sensor.modem_callerid', 'cid_name') }}  {{ state_attr('sensor.modem_callerid', 'cid_number') }} '
  - alias: Say CallerID
    trigger:
      platform: state
      entity_id: sensor.modem_callerid
      to: &quot;callerid&quot;
    action:
      service: tts.google_say
      data_template:
        message: 'Call from {{ state_attr('sensor.modem_callerid', 'cid_name') }}'
</code></pre>
:ET