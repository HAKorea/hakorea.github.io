I"€<p>Newer Linux distributions are trending towards using <code>systemd</code> for managing daemons. Typically, systems based on Fedora, ArchLinux, or Debian (8 or later) use <code>systemd</code>. This includes Ubuntu releases including and after 15.04, CentOS, and Red Hat. If you are unsure if your system is using <code>systemd</code>, you may check with the following command:</p>
<pre><code class="language-bash">$ ps -p 1 -o comm=
</code></pre>
<p>If the preceding command returns the string <code>systemd</code>, continue with the instructions below.</p>
<p>A service file is needed to control Home Assistant with <code>systemd</code>. The template below should be created using a text editor. Note, root permissions via <code>sudo</code> will likely be needed. The following should be noted to modify the template:</p>
<ul>
<li><code>ExecStart</code> contains the path to <code>hass</code> and this may vary. Check with <code>whereis hass</code> for the location.</li>
<li>For most systems, the file is <code>/etc/systemd/system/home-assistant@YOUR_USER.service</code> with YOUR_USER replaced by the user account that Home Assistant will run as (normally <code>homeassistant</code>).  In particular, this is the case for Ubuntu 16.04.</li>
<li>If unfamiliar with command-line text editors, <code>sudo nano -w [filename]</code> can be used with <code>[filename]</code> replaced with the full path to the file.  Ex. <code>sudo nano -w /etc/systemd/system/home-assistant@YOUR_USER.service</code>.  After text entered, press CTRL-X then press Y to save and exit.</li>
<li>If you‚Äôre running Home Assistant in a Python virtual environment or a Docker container, please skip to the appropriate template listed below.</li>
</ul>
<pre><code class="language-text">[Unit]
Description=Home Assistant
After=network-online.target

[Service]
Type=simple
User=%i
ExecStart=/usr/bin/hass

[Install]
WantedBy=multi-user.target
</code></pre>
<h3>Python virtual environment</h3>
<p>If you‚Äôve setup Home Assistant in <code>virtualenv</code> following our <a href="/getting-started/installation-virtualenv/">Python installation guide</a> or <a href="/getting-started/installation-raspberry-pi/">manual installation guide for Raspberry Pi</a>, the following template should work for you. If Home Assistant install is not located at <code>/srv/homeassistant</code>, please modify the <code>ExecStart=</code> line appropriately. <code>YOUR_USER</code> should be replaced by the user account that Home Assistant will run as (e.g <code>homeassistant</code>).</p>
<pre><code class="language-text">[Unit]
Description=Home Assistant
After=network-online.target

[Service]
Type=simple
User=%i
ExecStart=/srv/homeassistant/bin/hass -c &quot;/home/%i/.homeassistant&quot;

[Install]
WantedBy=multi-user.target
</code></pre>
<h3>Docker</h3>
<p>If you want to use Docker, the following template should work for you.</p>
<pre><code class="language-text">[Unit]
Description=Home Assistant
Requires=docker.service
After=docker.service

[Service]
Restart=always
RestartSec=3
ExecStart=/usr/bin/docker run --name=home-assistant-%i -v /home/%i/.homeassistant/:/config -v /etc/localtime:/etc/localtime:ro --net=host homeassistant/home-assistant
ExecStop=/usr/bin/docker stop -t 2 home-assistant-%i
ExecStopPost=/usr/bin/docker rm -f home-assistant-%i

[Install]
WantedBy=multi-user.target
</code></pre>
<h3>Next Steps</h3>
<p>You need to reload <code>systemd</code> to make the daemon aware of the new configuration.</p>
<pre><code class="language-bash">$ sudo systemctl --system daemon-reload
</code></pre>
<p>To have Home Assistant start automatically at boot, enable the service.</p>
<pre><code class="language-bash">$ sudo systemctl enable home-assistant@YOUR_USER
</code></pre>
<p>To disable the automatic start, use this command.</p>
<pre><code class="language-bash">$ sudo systemctl disable home-assistant@YOUR_USER
</code></pre>
<p>To start Home Assistant now, use this command.</p>
<pre><code class="language-bash">$ sudo systemctl start home-assistant@YOUR_USER
</code></pre>
<p>You can also substitute the <code>start</code> above with <code>stop</code> to stop Home Assistant, <code>restart</code> to restart Home Assistant, and ‚Äòstatus‚Äô to see a brief status report as seen below.</p>
<pre><code class="language-bash">$ sudo systemctl status home-assistant@YOUR_USER
‚óè home-assistant@fab.service - Home Assistant for YOUR_USER
   Loaded: loaded (/etc/systemd/system/home-assistant@YOUR_USER.service; enabled; vendor preset: disabled)
   Active: active (running) since Sat 2016-03-26 12:26:06 CET; 13min ago
 Main PID: 30422 (hass)
   CGroup: /system.slice/system-home\x2dassistant.slice/home-assistant@YOUR_USER.service
           ‚îú‚îÄ30422 /usr/bin/python3 /usr/bin/hass
           ‚îî‚îÄ30426 /usr/bin/python3 /usr/bin/hass
[...]
</code></pre>
<p>To get Home Assistant‚Äôs logging output, simple use <code>journalctl</code>.</p>
<pre><code class="language-bash">$ sudo journalctl -f -u home-assistant@YOUR_USER
</code></pre>
<p>Because the log can scroll quite quickly, you can select to view only the error lines:</p>
<pre><code class="language-bash">$ sudo journalctl -f -u home-assistant@YOUR_USER | grep -i 'error'
</code></pre>
<p>When working on Home Assistant, you can easily restart the system and then watch the log output by combining the above commands using <code>&amp;&amp;</code></p>
<pre><code class="language-bash">$ sudo systemctl restart home-assistant@YOUR_USER &amp;&amp; sudo journalctl -f -u home-assistant@YOUR_USER
</code></pre>
<h3>Automatically restarting Home Assistant on failure</h3>
<p>If you want to restart the Home Assistant service automatically after a crash, add the following lines to the <code>[Service]</code> section of your unit file:</p>
<pre><code class="language-text">Restart=on-failure
RestartSec=5s
</code></pre>
:ET