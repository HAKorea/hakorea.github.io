I"<div class='note'>
<p>You should not use this if you are also using the <a href="/addons/duckdns/">DuckDNS add-on</a>. The DuckDNS add-on has integrated Let’s Encrypt support.</p>
</div>
<p>Setup and manage a <a href="https://letsencrypt.org/">Let’s Encrypt</a> certificate. This add-on will create a certificate on the first run and will auto-renew if the certificate is within 30 days of expiration. This add-on uses port 80 to verify the certificate request. You will need to stop all other add-ons that also use this port.</p>
<pre><code class="language-json">{
  &quot;email&quot;: &quot;example@example.com&quot;,
  &quot;domains&quot;: [&quot;example.com&quot;, &quot;mqtt.example.com&quot;, &quot;hass.example.com&quot;],
  &quot;certfile&quot;: &quot;fullchain.pem&quot;,
  &quot;keyfile&quot;: &quot;privkey.pem&quot;
}
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='email' href='#email'></a> email</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>Your email address for registration on Let’s Encrypt.</p>
</span></p></dd><dt><a class='title-link' name='domains' href='#domains'></a> domains</dt><dd><p class='desc'><span class='type'>(<span class='list'>list</span>)</span><span class='required'>(Required)</span><span class='description'><p>A list of domains to create/renew the certificate.</p>
</span></p></dd><dt><a class='title-link' name='certfile' href='#certfile'></a> certfile</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>Name of the certfile that is created.  Leave as default value.</p>
</span></p><p class='default'>
Default value: <p>fullchain.pem</p>
</p></dd><dt><a class='title-link' name='keyfile' href='#keyfile'></a> keyfile</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>Name of the keyfile that is created.  Leave as default value.</p>
</span></p><p class='default'>
Default value: <p>privkey.pem</p>
</p></dd></dl>
</div>
<h2>Home Assistant configuration</h2>
<p>Use the following configuration in Home Assistant to use the generated certificate:</p>
<pre><code class="language-yaml">http:
  base_url: https://my-domain.tld:8123
  ssl_certificate: /ssl/fullchain.pem
  ssl_key: /ssl/privkey.pem
</code></pre>
<p>If you use another port such as <code>8123</code> or an SSL proxy, change the port number.</p>
<h2>Enabling auto-renewals</h2>
<p>Out of the box, the add-on will not automatically renew your certificate. In fact, it only starts, tries to get/renew your certificate, and then stops. It’s up to you to manually start it again whenever your certificate comes close to expiry.</p>
<p>However, you can automate this process using Home Assistant.</p>
<p>Use this in your <code>automations.yaml</code> to attempt certificate renewal each day at midnight:</p>
<pre><code class="language-yaml">- id: letsencrypt-renewal
  alias: &quot;Let's Encrypt Renewal&quot;
  trigger:
  - platform: time
    at: '00:00:00'
  action:
  - service: hassio.addon_restart
    data:
      addon: core_letsencrypt
</code></pre>
<p>If you are using the <a href="/addons/nginx_proxy/">Nginx Proxy add-on</a> you will need need to stop this during the renewal process. This can be achieved by stopping the add-on whilst restarting the Let’s Encrypt add-on. This can be achieved the following configuration:</p>
<pre><code class="language-yaml">- id: letsencrypt-renewal
  alias: 'LetsEncrypt renewal'
  trigger:
  - platform: time
    at: '00:00:00'
  action:
  - service: hassio.addon_stop
    data:
      addon: core_nginx_proxy
  - service: hassio.addon_restart
    data:
      addon: core_letsencrypt
  - delay: '00:01:30'
  - service: hassio.addon_start
    data:
      addon: core_nginx_proxy
</code></pre>
:ET