I"¬<div class='note warning'>
<p>Synology only provide Python 3.5.1, which is not compatible with Home Assistant 0.65.0 or later. Until Synology offer an updated version of Python, Home Assistant 0.64 is the most recent version that will be able to be installed. You can manually specify the version of Home Assistant to install, for example to install version 0.64.3 you would do <code>./python3 -m pip install homeassistant==0.64.3</code></p>
</div>
<p>There are 2 alternatives, when using Home Assistant on Synology NAS:</p>
<ol>
<li>using Docker</li>
<li>directly running on DSM</li>
</ol>
<p>Option 1 is described on the <a href="/docs/installation/docker/">Docker installation page</a>, whereas Option 2 is described below.</p>
<p>The following configuration has been tested on Synology 413j running DSM 6.0-7321 Update 1.</p>
<p>Running these commands will:</p>
<ul>
<li>Install Home Assistant</li>
<li>Enable Home Assistant to be launched on <code>http://localhost:8123</code></li>
</ul>
<p>Using the Synology webadmin:</p>
<ul>
<li>Install python3 using the Synology Package Center</li>
<li>Create homeassistant user and add to the ‚Äúusers‚Äù group</li>
</ul>
<p>SSH onto your synology &amp; login as admin or root</p>
<ul>
<li>Log in with your own administrator account</li>
<li>Switch to root using:</li>
</ul>
<pre><code class="language-bash">$ sudo -i
</code></pre>
<p>Check the path to python3 (assumed to be /volume1/@appstore/py3k/usr/local/bin)</p>
<pre><code class="language-bash"># cd /volume1/@appstore/py3k/usr/local/bin
</code></pre>
<p>Install PIP (Python‚Äôs package management system)</p>
<pre><code class="language-bash"># ./python3 -m ensurepip
</code></pre>
<p>Use PIP to install Homeassistant package 0.64.3</p>
<pre><code class="language-bash"># ./python3 -m pip install homeassistant==0.64.3
</code></pre>
<p>Create homeassistant config directory &amp; switch to it</p>
<pre><code class="language-bash"># mkdir /volume1/homeassistant
# chown homeassistant /volume1/homeassistant 
# chmod 755 /volume1/homeassistant
# cd /volume1/homeassistant
</code></pre>
<p>Hint: alternatively you can also create a ‚ÄúShared Folder‚Äù via Synology WebUI (e.g., via ‚ÄúFile Station‚Äù) - this has the advantage that the folder is visible via ‚ÄúFile Station‚Äù.</p>
<p>Create hass-daemon file using the following code (edit the variables in uppercase if necessary)</p>
<pre><code class="language-bash">#!/bin/sh

# Package
PACKAGE=&quot;homeassistant&quot;
DNAME=&quot;Home Assistant&quot;

# Others
USER=&quot;homeassistant&quot;
PYTHON_DIR=&quot;/volume1/@appstore/py3k/usr/local/bin&quot;
PYTHON=&quot;$PYTHON_DIR/python3&quot;
HASS=&quot;$PYTHON_DIR/hass&quot;
INSTALL_DIR=&quot;/volume1/homeassistant&quot;
PID_FILE=&quot;$INSTALL_DIR/home-assistant.pid&quot;
FLAGS=&quot;-v --config $INSTALL_DIR --pid-file $PID_FILE --daemon&quot;
REDIRECT=&quot;&gt; $INSTALL_DIR/home-assistant.log 2&gt;&amp;1&quot;

start_daemon ()
{
    sudo -u ${USER} /bin/sh -c &quot;$PYTHON $HASS $FLAGS $REDIRECT;&quot;
}

stop_daemon ()
{
    kill `cat ${PID_FILE}`
    wait_for_status 1 20 || kill -9 `cat ${PID_FILE}`
    rm -f ${PID_FILE}
}

daemon_status ()
{
    if [ -f ${PID_FILE} ] &amp;&amp; kill -0 `cat ${PID_FILE}` &gt; /dev/null 2&gt;&amp;1; then
        return
    fi
    rm -f ${PID_FILE}
    return 1
}

wait_for_status ()
{
    counter=$2
    while [ ${counter} -gt 0 ]; do
        daemon_status
        [ $? -eq $1 ] &amp;&amp; return
        let counter=counter-1
        sleep 1
    done
    return 1
}

case $1 in
    start)
        if daemon_status; then
            echo ${DNAME} is already running
            exit 0
        else
            echo Starting ${DNAME} ...
            start_daemon
            exit $?
        fi
        ;;
    stop)
        if daemon_status; then
            echo Stopping ${DNAME} ...
            stop_daemon
            exit $?
        else
            echo ${DNAME} is not running
            exit 0
        fi
        ;;
        restart)
        if daemon_status; then
            echo Stopping ${DNAME} ...
            stop_daemon
            echo Starting ${DNAME} ...
            start_daemon
            exit $?
        else
            echo ${DNAME} is not running
            echo Starting ${DNAME} ...
            start_daemon
            exit $?
        fi
        ;;
    status)
        if daemon_status; then
            echo ${DNAME} is running
            exit 0
        else
            echo ${DNAME} is not running
            exit 1
        fi
        ;;
    log)
        echo ${LOG_FILE}
        exit 0
        ;;
    *)
        exit 1
        ;;
esac

</code></pre>
<p>Create links to python folders to make things easier in the future:</p>
<pre><code class="language-bash"># ln -s /volume1/@appstore/py3k/usr/local/bin/python3 python3
# ln -s /volume1/@appstore/py3k/usr/local/lib/python3.5/site-packages/homeassistant homeassistant
</code></pre>
<p>Set the owner and permissions on your config folder</p>
<pre><code class="language-bash"># chown -R homeassistant:users /volume1/homeassistant
# chmod -R 664 /volume1/homeassistant
</code></pre>
<p>Make the daemon file executable:</p>
<pre><code class="language-bash"># chmod 755 /volume1/homeassistant/hass-daemon
</code></pre>
<p>Update your firewall (if it is turned on the Synology device):</p>
<ul>
<li>Go to your Synology control panel</li>
<li>Go to security</li>
<li>Go to firewall</li>
<li>Go to Edit Rules</li>
<li>Click Create</li>
<li>Select Custom: Destination port ‚ÄúTCP‚Äù</li>
<li>Type ‚Äú8123‚Äù in port</li>
<li>Click on OK</li>
<li>Click on OK again</li>
</ul>
<p>Copy your configuration.yaml file into the config folder
That‚Äôs it‚Ä¶ you‚Äôre all set to go</p>
<p>Here are some useful commands:</p>
<ul>
<li>Start Home Assistant:</li>
</ul>
<pre><code class="language-bash">$ sudo /volume1/homeassistant/hass-daemon start
</code></pre>
<ul>
<li>Stop Home Assistant:</li>
</ul>
<pre><code class="language-bash">$ sudo /volume1/homeassistant/hass-daemon stop
</code></pre>
<ul>
<li>Restart Home Assistant:</li>
</ul>
<pre><code class="language-bash">$ sudo /volume1/homeassistant/hass-daemon restart
</code></pre>
<ul>
<li>Upgrade Home Assistant::</li>
</ul>
<pre><code class="language-bash">$  /volume1/@appstore/py3k/usr/local/bin/python3 -m pip install --upgrade homeassistant
</code></pre>
:ET