I"‚<p>The <code>seven_segments</code> image processing platform allows you to read physical seven segments displays through Home Assistant. <a href="https://www.unix-ag.uni-kl.de/~auerswal/ssocr/"><code>ssocr</code></a> is used to extract the value shown on the display which is observed by a <a href="/integrations/camera/">camera</a>.</p>
<div class='note'>
<p>If you are using <a href="/hassio/">Hass.io</a> then just move forward to the configuration as all requirements are already fulfilled.</p>
</div>
<p><code>ssocr</code> needs to be available on your system. Check the installation instruction below:</p>
<pre><code class="language-bash">sudo dnf -y install imlib2-devel # Fedora
sudo apt install libimlib2-dev # Ubuntu
brew install imlib2 # macOS
git clone https://github.com/auerswal/ssocr.git
cd ssocr
make
sudo make PREFIX=/usr install # On most systems
make deb # (Optional) This allows you to make a deb so that you apt is aware of ssocr
</code></pre>
<p>To enable the OCR of a seven segment display in your installation, add the following to your <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
image_processing:
  - platform: seven_segments
    source:
      - entity_id: camera.seven_segments
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='ssocr_bin' href='#ssocr_bin'></a> ssocr_bin</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The command line tool <code>ssocr</code>. Set it if you use a different name for the executable.</p>
</span></p><p class='default'>
Default value: <p>ssocr</p>
</p></dd><dt><a class='title-link' name='x_position' href='#x_position'></a> x_position</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>X coordinate of the upper left corner of the area to crop.</p>
</span></p><p class='default'>
Default value: <p>0</p>
</p></dd><dt><a class='title-link' name='y_position' href='#y_position'></a> y_position</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Y coordinate of the upper left corner of the area to crop.</p>
</span></p><p class='default'>
Default value: <p>0</p>
</p></dd><dt><a class='title-link' name='height' href='#height'></a> height</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Height of the area to crop.</p>
</span></p><p class='default'>
Default value: <p>0</p>
</p></dd><dt><a class='title-link' name='width' href='#width'></a> width</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Width of the area to crop.</p>
</span></p><p class='default'>
Default value: <p>0</p>
</p></dd><dt><a class='title-link' name='rotate' href='#rotate'></a> rotate</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Rotation of the image.</p>
</span></p><p class='default'>
Default value: <p>0</p>
</p></dd><dt><a class='title-link' name='threshold' href='#threshold'></a> threshold</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Threshold for the difference between the digits and the background.</p>
</span></p><p class='default'>
Default value: <p>0</p>
</p></dd><dt><a class='title-link' name='digits' href='#digits'></a> digits</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Number of digits in the display.</p>
</span></p><p class='default'>
Default value: <p>-1</p>
</p></dd><dt><a class='title-link' name='extra_arguments' href='#extra_arguments'></a> extra_arguments</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Other arguments to use. Like <code>-D</code>, <code>dilation</code>, <code>erosion</code>, <code>greyscale</code>, <code>make_mono</code>, etc.</p>
</span></p></dd><dt><a class='title-link' name='source' href='#source'></a> source</dt><dd><p class='desc'><span class='type'>(<span class='list'>list</span>)</span><span class='required'>(Required)</span><span class='description'><p>List of image sources.</p>
</span></p></dd><dd><dl class='nested'><dt><a class='title-link' name='entity_id' href='#entity_id'></a> entity_id</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>A camera entity id to get picture from.</p>
</span></p></dd><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>This parameter allows you to override the name of your <code>image_processing</code> entity.</p>
</span></p></dd></dl></dd></dl>
</div>
<h3>Setup process</h3>
<p>Itâ€™s suggested that the first attempt to determine the needed parameters is using <code>ssocr</code> directly. This may require a couple of iterations to get the result</p>
<pre><code class="language-bash">$ ssocr -D erosion crop 390 250 490 280 -t 20 -d 4 seven-seg.png
</code></pre>
<p>This would lead to the following entry for the <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml">camera:
  - platform: local_file
    file_path: /home/homeassistant/.homeassistant/seven-seg.png
    name: seven_segments
image_processing:
  - platform: seven_segments
    x_position: 390
    y_position: 250
    height: 280
    width: 490
    threshold: 20
    digits: 4
    source:
      - entity_id: camera.seven_segments
</code></pre>
<p class='img'>
  <img src='/images/screenshots/ssocr.png' />
</p>
<p>With the help of a <a href="/integrations/template">template sensor</a>, the value can be shown as badge.</p>
<pre><code class="language-yaml">sensor:
  - platform: template
    sensors:
      power_meter:
        value_template: '{{ states('image_processing.sevensegment_ocr_seven_segments') }}'
        friendly_name: 'Ampere'
        unit_of_measurement: 'A'
</code></pre>
:ET