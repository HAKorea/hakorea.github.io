I"÷<p>The <code>rest</code> switch platform allows you to control a given endpoint that supports a <a href="https://en.wikipedia.org/wiki/Representational_state_transfer">RESTful API</a>. The switch can get the state via GET and set the state via POST on a given REST resource.</p>
<h2>Configuration</h2>
<p>To enable this switch, add the following lines to your <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
switch:
  - platform: rest
    resource: http://IP_ADDRESS/ENDPOINT
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='resource' href='#resource'></a> resource</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>The resource or endpoint that contains the value.</p>
</span></p></dd><dt><a class='title-link' name='method' href='#method'></a> method</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The method of the request. Supported <code>post</code> or <code>put</code>.</p>
</span></p><p class='default'>
Default value: <p>post</p>
</p></dd><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Name of the REST Switch.</p>
</span></p><p class='default'>
Default value: <p>REST Switch</p>
</p></dd><dt><a class='title-link' name='timeout' href='#timeout'></a> timeout</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Timeout for the request.</p>
</span></p><p class='default'>
Default value: <p>10</p>
</p></dd><dt><a class='title-link' name='body_on' href='#body_on'></a> body_on</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The body of the POST request that commands the switch to become enabled. This value can be a <a href="/topics/templating/">template</a>.</p>
</span></p><p class='default'>
Default value: <p>true</p>
</p></dd><dt><a class='title-link' name='body_off' href='#body_off'></a> body_off</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The body of the POST request that commands the switch to become disabled. This value can also be a <a href="/topics/templating/">template</a>.</p>
</span></p><p class='default'>
Default value: <p>false</p>
</p></dd><dt><a class='title-link' name='is_on_template' href='#is_on_template'></a> is_on_template</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>A <a href="/docs/configuration/templating/#processing-incoming-data">template</a> that determines the state of the switch from the value returned by the GET request on the resource URL. This template should compute to a boolean (True or False). If the value is valid JSON, it will be available in the template as the variable <code>value_json</code>. Default is equivalent to <code>'{{ value_json == body_on }}'</code>. This means that by default, the state of the switch is on if and only if the response to the GET request matches.</p>
</span></p></dd><dt><a class='title-link' name='username' href='#username'></a> username</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The username for accessing the REST endpoint.</p>
</span></p></dd><dt><a class='title-link' name='password' href='#password'></a> password</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The password for accessing the REST endpoint.</p>
</span></p></dd><dt><a class='title-link' name='headers' href='#headers'></a> headers</dt><dd><p class='desc'><span class='type'>(<span class='string list'>string | list</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The headers for the request.</p>
</span></p></dd><dt><a class='title-link' name='verify_ssl' href='#verify_ssl'></a> verify_ssl</dt><dd><p class='desc'><span class='type'>(<span class='boolean'>boolean</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Verify the SSL certificate of the endpoint.</p>
</span></p><p class='default'>
Default value: <p>true</p>
</p></dd></dl>
</div>
<div class='note warning'>
Make sure that the URL matches exactly your endpoint or resource.
</div>
<h2>Example</h2>
<h3>Switch with templated value</h3>
<p>This example shows a switch that uses a <a href="/topics/templating/">template</a> to allow Home Assistant to determine its state. In this example, the REST endpoint returns this JSON response with true indicating the switch is on.</p>
<pre><code class="language-json">{&quot;is_active&quot;: &quot;true&quot;}
</code></pre>
<pre><code class="language-yaml">switch:
  - platform: rest
    resource: http://IP_ADDRESS/led_endpoint
    body_on: '{&quot;active&quot;: &quot;true&quot;}'
    body_off: '{&quot;active&quot;: &quot;false&quot;}'
    is_on_template: '{{ value_json.is_active }}'
    headers:
      Content-Type: application/json
    verify_ssl: true
</code></pre>
<p><code>body_on</code> and <code>body_off</code> can also depend on the state of the system. For example, to enable a remote temperature sensor tracking on a radio thermostat, one has to send the current value of the remote temperature sensor. This can be achieved by using the template <code>'{&quot;rem_temp&quot;:{{states('sensor.bedroom_temp')}}}'</code>.</p>
:ET