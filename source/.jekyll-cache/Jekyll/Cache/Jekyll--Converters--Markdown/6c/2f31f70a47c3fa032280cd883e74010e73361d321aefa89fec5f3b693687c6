I"E,<p><a href="https://www.freenas.org">FreeNAS</a> is a free and open-source network-attached storage (NAS) software based on FreeBSD and the OpenZFS file system. It is licensed under the terms of the BSD License and runs on commodity x86-64 hardware.</p>
<p>This has been tested on FreeNAS 11.2 and should also work on FreeBSD 11.x as well. These instructions assume you already have a running and accessible jail. For more information on creating a jail read the official FreeNAS User Guide regarding <a href="https://www.ixsystems.com/documentation/freenas/11.2/jails.html">Jails</a>. Once you have the jail available, follow the steps below. Directories used follow standard BSD conventions but can be adjusted as you wish.</p>
<p>Enter the Home Assistant jail. If you don’t know which name you have given the jail, you can use the <code>iocage list</code> command to check.</p>
<pre><code class="language-bash"># If the jail is called 'HomeAssistant'
iocage exec HomeAssistant
</code></pre>
<p>Install the suggested packages:</p>
<pre><code class="language-bash">pkg update
pkg upgrade
pkg install -y autoconf bash ca_root_nss gmake pkgconf python37 py37-sqlite3
</code></pre>
<p>Create the user and group that Home Assistant will run as. The user/group ID of <code>8123</code> can be replaced if this is already in use in your environment.</p>
<pre><code class="language-bash">pw groupadd -n homeassistant -g 8123
echo 'homeassistant:8123:8123::::::/usr/local/bin/bash:' | adduser -f -
</code></pre>
<p>Create the installation directory:</p>
<pre><code class="language-bash">mkdir -p /usr/local/share/homeassistant
chown -R homeassistant:homeassistant /usr/local/share/homeassistant
</code></pre>
<p>Create the virtualenv and install Home Assistant itself:</p>
<pre><code class="language-bash">su homeassistant
cd /usr/local/share/homeassistant
python3.7 -m venv .
source ./bin/activate
pip3 install --upgrade pip
pip3 install homeassistant
</code></pre>
<p>While still in the <code>venv</code>, start Home Assistant to populate the configuration directory.</p>
<pre><code class="language-bash">hass --open-ui
</code></pre>
<p>Wait until you see:</p>
<pre><code class="language-bash">(MainThread) [homeassistant.core] Starting Home Assistant
</code></pre>
<p>Then escape and exit the <code>venv</code>.</p>
<pre><code class="language-bash">deactivate
exit
</code></pre>
<p>Create the directory and the <code>rc.d</code> script for the system-level service that enables Home Assistant to start when the jail starts.</p>
<pre><code class="language-bash">mkdir /usr/local/etc/rc.d/
</code></pre>
<p>Then create a file at <code>/usr/local/etc/rc.d/homeassistant</code> and insert the content below:</p>
<pre><code class="language-bash">vi /usr/local/etc/rc.d/homeassistant
</code></pre>
<pre><code class="language-bash">#!/bin/sh
#
# Based upon work by tprelog at https://github.com/tprelog/iocage-homeassistant/blob/11.3-RELEASE/overlay/usr/local/etc/rc.d/homeassistant
#
# PROVIDE: homeassistant
# REQUIRE: LOGIN
# KEYWORD: shutdown
#
# homeassistant_user: The user account used to run the homeassistant daemon.
#		This is optional, however do not specifically set this to an
#		empty string as this will cause the daemon to run as root.
#		Default: homeassistant
# homeassistant_group: The group account used to run the homeassistant daemon.
#		This is optional, however do not specifically set this to an
#		empty string as this will cause the daemon to run with group wheel.
#		Default: homeassistant
#
# homeassistant_venv: Directory where homeassistant virtualenv is installed.
#       Default:  &quot;/usr/local/share/homeassistant&quot;
#       Change:   `sysrc homeassistant_venv=&quot;/srv/homeassistant&quot;`
#       UnChange: `sysrc -x homeassistant_venv`
#
# homeassistant_config_dir: Directory where homeassistant config is located.
#       Default:  &quot;/home/homeassistant/.homeassistant&quot;
#       Change:   `sysrc homeassistant_config_dir=&quot;/home/hass/homeassistant&quot;`
#       UnChange: `sysrc -x homeassistant_config_dir`

# -------------------------------------------------------
# Copy this file to '/usr/local/etc/rc.d/homeassistant'
# `chmod +x /usr/local/etc/rc.d/homeassistant`
# `sysrc homeassistant_enable=yes`
# `service homeassistant start`
# -------------------------------------------------------

. /etc/rc.subr
name=homeassistant
rcvar=${name}_enable

pidfile_child=&quot;/var/run/${name}.pid&quot;
pidfile=&quot;/var/run/${name}_daemon.pid&quot;
logfile=&quot;/var/log/${name}.log&quot;

load_rc_config ${name}
: ${homeassistant_enable:=&quot;NO&quot;}
: ${homeassistant_user:=&quot;homeassistant&quot;}
: ${homeassistant_group:=&quot;homeassistant&quot;}
: ${homeassistant_config_dir:=&quot;/home/homeassistant/.homeassistant&quot;}
: ${homeassistant_venv:=&quot;/usr/local/share/homeassistant&quot;}

command=&quot;/usr/sbin/daemon&quot;
extra_commands=&quot;check_config restart test upgrade&quot;

start_precmd=${name}_precmd
homeassistant_precmd() {
    rc_flags=&quot;-f -o ${logfile} -P ${pidfile} -p ${pidfile_child} ${homeassistant_venv}/bin/hass --config ${homeassistant_config_dir} ${rc_flags}&quot;
    [ ! -e &quot;${pidfile_child}&quot; ] &amp;&amp; install -g ${homeassistant_group} -o ${homeassistant_user} -- /dev/null &quot;${pidfile_child}&quot;
    [ ! -e &quot;${pidfile}&quot; ] &amp;&amp; install -g ${homeassistant_group} -o ${homeassistant_user} -- /dev/null &quot;${pidfile}&quot;
    [ -e &quot;${logfile}&quot; ] &amp;&amp; rm -f -- &quot;${logfile}&quot;
    install -g ${homeassistant_group} -o ${homeassistant_user} -- /dev/null &quot;${logfile}&quot;
    if [ ! -d &quot;${homeassistant_config_dir}&quot; ]; then
      install -d -g ${homeassistant_group} -o ${homeassistant_user} -m 775 -- &quot;${homeassistant_config_dir}&quot;
    fi
}

stop_postcmd=${name}_postcmd
homeassistant_postcmd() {
    rm -f -- &quot;${pidfile}&quot;
    rm -f -- &quot;${pidfile_child}&quot;
}

upgrade_cmd=&quot;${name}_upgrade&quot;
homeassistant_upgrade() {
    service ${name} stop
    su ${homeassistant_user} -c '
      source ${@}/bin/activate || exit 1
      pip3 install --upgrade homeassistant
      deactivate
    ' _ ${homeassistant_venv} || exit 1
    [ $? == 0 ] &amp;&amp; homeassistant_check_config &amp;&amp; service ${name} start
}

check_config_cmd=&quot;${name}_check_config&quot;
homeassistant_check_config() {
    [ ! -e &quot;${homeassistant_config_dir}/configuration.yaml&quot; ] &amp;&amp; return 0
    echo &quot;Performing check on Home Assistant configuration:&quot;
    #eval &quot;${homeassistant_venv}/bin/hass --config ${homeassistant_config_dir} --script check_config&quot;
    su ${homeassistant_user} -c '
      source ${1}/bin/activate || exit 2
      hass --config ${2} --script check_config || exit 3
      deactivate
    ' _ ${homeassistant_venv} ${homeassistant_config_dir}
}

restart_cmd=&quot;${name}_restart&quot;
homeassistant_restart() {
    homeassistant_check_config || exit 1
    echo &quot;Restarting Home Assistant&quot;
    service ${name} stop
    service ${name} start
}

test_cmd=&quot;${name}_test&quot;
homeassistant_test() {
    echo -e &quot;\nTesting virtualenv...\n&quot;
    [ ! -d &quot;${homeassistant_venv}&quot; ] &amp;&amp; echo -e &quot; NO DIRECTORY: ${homeassistant_venv}\n&quot; &amp;&amp; exit
    [ ! -f &quot;${homeassistant_venv}/bin/activate&quot; ] &amp;&amp; echo -e &quot; NO FILE: ${homeassistant_venv}/bin/activate\n&quot; &amp;&amp; exit

    ## switch users / activate virtualenv / get version
    su &quot;${homeassistant_user}&quot; -c '
      source ${1}/bin/activate || exit 2
      echo &quot; $(python --version)&quot; || exit 3
      echo &quot; Home Assistant $(pip3 show homeassistant | grep Version | cut -d&quot; &quot; -f2)&quot; || exit 4
      deactivate
    ' _ ${homeassistant_venv}

    [ $? != 0 ] &amp;&amp; echo &quot;exit $?&quot;
}

load_rc_config ${name}
run_rc_command &quot;$1&quot;
</code></pre>
<p>Make the <code>rc.d</code> script executable:</p>
<pre><code class="language-bash">chmod +x /usr/local/etc/rc.d/homeassistant
</code></pre>
<p>Configure the service to start on boot and start the Home Assistant service:</p>
<pre><code class="language-bash">sysrc homeassistant_enable=&quot;YES&quot;
service homeassistant start
</code></pre>
<p>You can also restart the jail to ensure that Home Assistant starts on boot.</p>
<div class='note'>
<p>USB Z-wave sticks may give <code>dmesg</code> warnings similar to “data interface 1, has no CM over data, has no break”. This doesn’t impact the function of the Z-Wave stick in Home Assistant. Just make sure the proper <code>/dev/cu*</code> is used in the Home Assistant <code>configuration.yaml</code> file.</p>
</div>
<h1>Adding support for Z-wave stick</h1>
<p>The following two packages need to be installed in the jail</p>
<pre><code class="language-bash">pkg install gmake
pkg install libudev-devd
</code></pre>
<p>Then you can install the zwave package</p>
<pre><code class="language-bash">su homeassistant
cd /usr/local/share/homeassistant
source ./bin/activate.csh
pip3 install homeassistant-pyozw==0.1.7
deactivate
exit
</code></pre>
<p>Stop the hass Jail</p>
<pre><code class="language-bash">sudo iocage stop HomeAssistant
</code></pre>
<p>Edit the devfs rules on the Freenas Host</p>
<pre><code class="language-bash">vi /etc/devfs.rules
</code></pre>
<p>Add the following lines</p>
<pre><code class="language-bash">[devfsrules_jail_allow_usb=7]
add path 'cu\*' mode 0660 group 8123 unhide
</code></pre>
<p>Reload devfs</p>
<pre><code class="language-bash">sudo service devfs restart
</code></pre>
<p>Edit the ruleset used by the jail in the Freenas GUI by going to Jails -&gt; hass -&gt; Edit -&gt;  Jail Properties -&gt;  devfs_ruleset
Set it to 7</p>
<p>Start the hass jail</p>
<pre><code class="language-bash">sudo iocage start HomeAssistant
</code></pre>
<p>Connect to the hass jail and verify that you see the modem devices</p>
<pre><code class="language-bash">sudo iocage console HomeAssistant
</code></pre>
<pre><code class="language-bash">ls /dev/cu*
</code></pre>
<p>This should output the following</p>
<pre><code class="language-bash">/dev/cuau0      /dev/cuaU0
</code></pre>
<p>Add the zwave config to your <code>configuration.yaml</code> and restart HA</p>
<pre><code class="language-bash">vi /home/homeassistant/.homeassistant/configuration.yaml
</code></pre>
<pre><code class="language-yaml">zwave:
  usb_path: /dev/cuaU0
  polling_interval: 10000
</code></pre>
<pre><code class="language-bash">service homeassistant restart
</code></pre>
<h1>Updating</h1>
<p>Before updating, read the changelog to see what has changed and how it affects your Home Assistant instance. Enter the jail using <code>iocage exec &lt;jailname&gt;</code>. Stop the Home Assistant service:</p>
<pre><code class="language-bash">service homeassistant stop
</code></pre>
<p>Then, enter the <code>venv</code>:</p>
<pre><code class="language-bash">su homeassistant
cd /usr/local/share/homeassistant
source ./bin/activate
</code></pre>
<p>Upgrade Home Assistant:</p>
<pre><code class="language-bash">pip3 install homeassistant --upgrade
</code></pre>
<p>Log out of the <code>homeassistant</code> user and start Home Assistant:</p>
<pre><code class="language-bash">exit
service homeassistant start
</code></pre>
:ET