I"ç!<p>The <code>samsungtv</code> platform allows you to control a <a href="https://www.samsung.com/uk/tvs/all-tvs/">Samsung Smart TV</a>.</p>
<h3>Setup</h3>
<p>When the TV is first connected, you will need to accept Home Assistant on the TV to allow communication.</p>
<h3>Configuration</h3>
<p>To add a TV to your installation without relying on the <a href="/integrations/discovery/">discovery component</a>, add the following to your <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
media_player:
  - platform: samsungtv
    host: IP_ADDRESS
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='host' href='#host'></a> host</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>The IP of the Samsung Smart TV, e.g., <code>192.168.0.10</code>.</p>
</span></p></dd><dt><a class='title-link' name='port' href='#port'></a> port</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The port of the Samsung Smart TV. If set to 8001, the new websocket connection will be used (required for 2016+ TVs) - for installs other than Hass.io or Docker you may need to install a Python package, see below.</p>
</span></p><p class='default'>
Default value: <p>55000</p>
</p></dd><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The name you would like to give to the Samsung Smart TV.</p>
</span></p></dd><dt><a class='title-link' name='timeout' href='#timeout'></a> timeout</dt><dd><p class='desc'><span class='type'>(<span class='time'>time</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The timeout for communication with the TV in seconds.</p>
</span></p><p class='default'>
Default value: <p>0 (no timeout)</p>
</p></dd><dt><a class='title-link' name='mac' href='#mac'></a> mac</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The MAC address of the Samsung Smart TV, e.g., <code>00:11:22:33:44:55:66</code>. Required for power on support via wake on lan.</p>
</span></p></dd><dt><a class='title-link' name='broadcast_address' href='#broadcast_address'></a> broadcast_address</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The broadcast address on which to send the Wake-On-Lan packet.</p>
</span></p><p class='default'>
Default value: <p>255.255.255.255</p>
</p></dd></dl>
</div>
<h3>Supported models</h3>
<p>If your model is not on the list then give it a test, if everything works correctly then add it to the list on <a href="https://github.com/home-assistant/home-assistant.io/tree/current/source/_integrations/samsungtv.markdown">GitHub</a>.</p>
<h4>Naming</h4>
<p>The first letter (U, P, L, H &amp; K) represent the screen type, e.g., LED or Plasma. The second letter represents the region, E is Europe, N is North America and A is Asia &amp; Australia. The two numbers following that represent the screen size. If you add your model remember to remove these first 4 characters before adding to the list.</p>
<p>For example: for model <code>UN55NU7100</code>, the <code>UN55</code> would mean it‚Äôs an LED, North American, 55 inch TV, and the model number listed below would be the remainder: <code>NU7100</code>.</p>
<h4>Models tested and working</h4>
<ul>
<li>C7700</li>
<li>D5500</li>
<li>D6100</li>
<li>D6300SF</li>
<li>D6500</li>
<li>D6505</li>
<li>D6900 (WOL did not work)</li>
<li>D7000</li>
<li>D8000</li>
<li>EH5300</li>
<li>EH5600</li>
<li>ES5500</li>
<li>ES5700</li>
<li>ES6100</li>
<li>ES6300</li>
<li>ES6800</li>
<li>F4580</li>
<li>F6300</li>
<li>F6400</li>
<li>F6400AF</li>
<li>F6500</li>
<li>F7000</li>
<li>F8000BF</li>
<li>K5579 (port must be set to 8001, On/Off, Forward/Backward, Volume control, but no Play button)</li>
<li>K5600AK (partially supported, turn on works but state is not updated)</li>
<li>K6500AF (port must be set to 8001)</li>
<li>KS7005 (port must be set to 8001, MAC address must be provided, On/Off, Volume are OK, no channel change)</li>
<li>KS7502 (port must be set to 8001, turn on doesn‚Äôt work, turn off works fine)</li>
<li>KS8000 (port must be set to 8001)</li>
<li>KS8005 (port must be set to 8001)</li>
<li>KS8500 (port must be set to 8001)</li>
<li>KU6020 (port must be set to 8001)</li>
<li>KU6100 (port must be set to 8001)</li>
<li>KU6290 (port must be set to 8001)</li>
<li>KU6400U (port must be set to 8001)</li>
<li>KU7000 (port must be set to 8001)</li>
<li>M5620 (port must be set to 8001)</li>
<li>MU6170UXZG (port must be set to 8001)</li>
<li>NU7090 (port must be set to 8801, On/Off, MAC must be specified for Power On)</li>
<li>NU7400 (port set to 8001)</li>
<li>NU8000</li>
<li>U6000 (port must be set to 8001)</li>
<li>U6300 (port must be set to 8001)</li>
<li>UE6199UXZG (port must be set to 8001, On/Off, Forward/Backward, Volume control, but no Play button)</li>
<li>UE65KS8005 (port must be set to 8001, On/Off, Forward/Backward, Volume are OK, but no Play button)</li>
<li>UE49KU6470 (port must be set to 8001, On/Off, Forward/Backward, Volume are OK, but no Play button)</li>
<li>UE46ES5500 (partially supported, turn on doesn‚Äôt work)</li>
</ul>
<h4>Models tested but not yet working</h4>
<ul>
<li>J5200 - Unable to see state and unable to control</li>
<li>J5500 - State is always ‚Äúon‚Äù and unable to control (but port 8001 <em>is</em> open)</li>
<li>J6200 - State is always ‚Äúon‚Äù and unable to control (but port 8001 <em>is</em> open)</li>
<li>J6300 - State is always ‚Äúon‚Äù and unable to control (but port 8001 <em>is</em> open)</li>
<li>JS8005 - State tracking working but unable to control (but port 8001 <em>is</em> open)</li>
<li>JS9000 - State is always ‚Äúon‚Äù and unable to control (but port 8001 <em>is</em> open)</li>
<li>JS9500 - State is always ‚Äúon‚Äù and unable to control (but port 8001 <em>is</em> open)</li>
<li>JU6445K - State is always ‚Äúon‚Äù and unable to control (but port 8001 <em>is</em> open)</li>
<li>JU6800 - Unable to see state and unable to control</li>
<li>JU7000 - Unable to see state and unable to control (but port 8001 <em>is</em> open)</li>
<li>JU7500 - Unable to see state and unable to control</li>
<li>MU6125 - Unable to see state and unable to control (Tested on UE58MU6125 on port 8001 and 8801)</li>
<li>MU6300 - Port set to 8001, turning on works, status not working reliably, turning off is not permanent (it comes back on)</li>
<li>MU6400 - Unable to see state and unable to control (using latest 1270 firmware. Had limited functionality on previous firmware)</li>
<li>Q60 ‚Äì Turning on works, turning off does not work, State is always ‚Äúoff‚Äù.</li>
<li>Q6F ‚Äì Port set to 8001, turning on works, turning off does not work, status not working reliably.</li>
<li>Q7F - State is always ‚Äúoff‚Äù and unable to control via port 8001.</li>
<li>Q9F - Turning on works, turning off does not work. State is correct. Nothing else works. Port 8001.</li>
</ul>
<p>None of the 2014 (H) and 2015 (J) model series (e.g., J5200) will work, since Samsung have used a different (encrypted) type of interface for these.</p>
<h3>Usage</h3>
<h4>Changing channels</h4>
<p>Changing channels can be done by calling the <code>media_player.play_media</code> service
with the following payload:</p>
<pre><code class="language-javascript">{
  &quot;entity_id&quot;: &quot;media_player.office_tv&quot;,
  &quot;media_content_id&quot;: &quot;590&quot;,
  &quot;media_content_type&quot;: &quot;channel&quot;
}
</code></pre>
<h4>Selecting a source</h4>
<p>Source selection is not yet implemented.</p>
<h3>Hass.io</h3>
<p>No additional actions are required</p>
<h3>Docker</h3>
<p>No additional actions are required</p>
<h3>Other install methods</h3>
<p>You will need to install the <code>websocket-client</code> Python package in your Home Assistant install. This will probably be done with:</p>
<pre><code class="language-bash">pip3 install websocket-client
</code></pre>
<p>Remembering to activate your venv if you‚Äôre using a venv install.</p>
:ET