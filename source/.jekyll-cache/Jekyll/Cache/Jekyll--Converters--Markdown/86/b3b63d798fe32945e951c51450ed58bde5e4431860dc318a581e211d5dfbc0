I"œ<p>The <code>bh1750</code> sensor platform allows you to read the ambient light level in Lux from a <a href="https://www.mouser.com/ds/2/348/bh1750fvi-e-186247.pdf">BH1750FVI sensor</a> connected via <a href="https://en.wikipedia.org/wiki/I%C2%B2C">I2c</a> bus (SDA, SCL pins). It allows you to use all the resolution modes of the sensor described in its datasheet.</p>
<p>Tested devices:</p>
<ul>
<li><a href="https://www.raspberrypi.org/">Raspberry Pi</a></li>
</ul>
<h2>Configuration</h2>
<p>To use your BH1750 sensor in your installation, add the following to your <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
sensor:
  - platform: bh1750
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Name of the sensor.</p>
</span></p><p class='default'>
Default value: <p>BH1750 Light Sensor</p>
</p></dd><dt><a class='title-link' name='i2c_address' href='#i2c_address'></a> i2c_address</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>I2c address of the sensor. It is 0x23 or 0x5C.</p>
</span></p><p class='default'>
Default value: <p>35</p>
</p></dd><dt><a class='title-link' name='i2c_bus' href='#i2c_bus'></a> i2c_bus</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>I2c bus where the sensor is.</p>
</span></p><p class='default'>
Default value: <p>1, for Raspberry Pi 2 and 3.</p>
</p></dd><dt><a class='title-link' name='operation_mode' href='#operation_mode'></a> operation_mode</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Working mode for the sensor.</p>
</span></p><p class='default'>
Default value: <p>continuous_high_res_mode_1</p>
</p></dd><dt><a class='title-link' name='sensitivity' href='#sensitivity'></a> sensitivity</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The sensitivity of the sensor can be a value between 31 and 254.</p>
</span></p><p class='default'>
Default value: <p>69</p>
</p></dd><dt><a class='title-link' name='measurement_delay_ms' href='#measurement_delay_ms'></a> measurement_delay_ms</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Delay time in ms for waiting the sensor to get the measure.</p>
</span></p><p class='default'>
Default value: <p>120</p>
</p></dd><dt><a class='title-link' name='multiplier' href='#multiplier'></a> multiplier</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Correction coefficient to multiply the measured light level. Value between 0.1 and 10.</p>
</span></p><p class='default'>
Default value: <p>1</p>
</p></dd></dl>
</div>
<h2>Full Examples</h2>
<p>If you want to specify the resolution mode of the digital sensor or need to change the default I2c address (which is 0x23), add more details to the <code>configuration.yaml</code> file.</p>
<p>The sensor can work with resolutions of 0.5 lx (high res mode 1), 1 lx (high res mode 2) or 4 lx (low res mode), and make measurements continuously or one time each call. To set any of these operation modes, select one of these combinations: <code>continuous_low_res_mode</code>, <code>continuous_high_res_mode_2</code>, <code>continuous_high_res_mode_1</code>, <code>one_time_high_res_mode_1</code>, <code>one_time_high_res_mode_2</code>, <code>one_time_low_res_mode</code>.</p>
<pre><code class="language-yaml"># Example of customized configuration.yaml entry
sensor:
  - platform: bh1750
    name: Ambient light
    i2c_address: 0x5C
    operation_mode: one_time_high_res_mode_1
    sensitivity: 60
    measurement_delay_ms: 200
    scan_interval: 25
</code></pre>
<h2>Directions for installing smbus support on Raspberry Pi</h2>
<p>Enable I2c interface with the Raspberry Pi configuration utility:</p>
<pre><code class="language-bash"># pi user environment: Enable i2c interface
$ sudo raspi-config
</code></pre>
<p>Select <code>Interfacing options-&gt;I2C</code> choose <code>&lt;Yes&gt;</code> and hit <code>Enter</code>, then go to <code>Finish</code> and youâ€™ll be prompted to reboot.</p>
<p>Install dependencies for use the <code>smbus-cffi</code> module and enable your <em>homeassistant</em> user to join the <em>i2c</em> group:</p>
<pre><code class="language-bash"># pi user environment: Install i2c dependencies and utilities
$ sudo apt-get install build-essential libi2c-dev i2c-tools python-dev libffi-dev

# pi user environment: Add homeassistant user to the i2c group
$ sudo addgroup homeassistant i2c

# pi user environment: Reboot Raspberry Pi to apply changes
$ sudo reboot
</code></pre>
<h3>Check the i2c address of the sensor</h3>
<p>After installing <code>i2c-tools</code>, a new utility is available to scan the addresses of the connected sensors:</p>
<pre><code class="language-bash">$ /usr/sbin/i2cdetect -y 1
</code></pre>
<p>It will output a table like this:</p>
<pre><code class="language-text">     0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f
00:          -- -- -- -- -- -- -- -- -- -- -- -- --
10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
20: -- -- -- 23 -- -- -- -- -- -- -- -- -- -- -- --
30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
40: 40 -- -- -- -- -- UU -- -- -- -- -- -- -- -- --
50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
70: -- -- -- -- -- -- -- 77
</code></pre>
<p>So you can see the sensor address what you are looking for is <strong>0x23</strong> (there are more i2c sensors in that Raspberry Pi).</p>
:ET