I"Í<p>The <code>tomato</code> platform requires an extra config variable called <code>http_id</code>. The
value can be obtained by logging in to the Tomato admin interface and search for
<code>http_id</code> in the page source code.</p>
<p>Because of a limitation in Tomatoâ€™s API, this platform will only track wireless devices.
If tracking wired devices like a Philips Hue Hub is necessary,
it is possible to use another platform like <a href="/integrations/nmap_tracker">Nmap</a>.</p>
<p>To use this device tracker in your installation,
add the following to your <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
device_tracker:
  - platform: tomato
    host: YOUR_ROUTER_IP_ADDRESS
    username: YOUR_ADMIN_USERNAME
    password:  YOUR_ADMIN_PASSWORD
    http_id: YOUR_HTTP_ID
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='host' href='#host'></a> host</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>The IP address or hostname of your router, e.g., <code>192.168.1.1</code> or <code>rt-ac68u</code>.</p>
</span></p></dd><dt><a class='title-link' name='port' href='#port'></a> port</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The port number of your router, e.g., <code>443</code>.</p>
</span></p><p class='default'>
Default value: <p>80/443 (automatically detected)</p>
</p></dd><dt><a class='title-link' name='ssl' href='#ssl'></a> ssl</dt><dd><p class='desc'><span class='type'>(<span class='boolean'>boolean</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Whether to connect via <code>https</code>.</p>
</span></p><p class='default'>
Default value: <p>false</p>
</p></dd><dt><a class='title-link' name='verify_ssl' href='#verify_ssl'></a> verify_ssl</dt><dd><p class='desc'><span class='type'>(<span class='string boolean'>string | boolean</span>)</span><span class='required'>(Optional)</span><span class='description'><p>If SSL verification for https resources needs to be turned off (for self-signed certs, etc.) this can take on boolean values <code>false</code> or <code>true</code> or you can pass a location on the device where a certificate can be used for verification e.g., <code>/mnt/NAS/router_cert.pem</code>.</p>
</span></p><p class='default'>
Default value: <p>true</p>
</p></dd><dt><a class='title-link' name='username' href='#username'></a> username</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>The username of an user with administrative privileges, usually <em>admin</em>.</p>
</span></p></dd><dt><a class='title-link' name='password' href='#password'></a> password</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>The password for your given admin account.</p>
</span></p></dd><dt><a class='title-link' name='http_id' href='#http_id'></a> http_id</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>The value can be obtained by logging in to the Tomato admin interface and search for <code>http_id</code> in the page source code.</p>
</span></p></dd></dl>
</div>
<p>See the <a href="/integrations/device_tracker/">device tracker integration page</a> for
instructions how to configure the people to be tracked.</p>
<p>A description of the API s available in this
<a href="https://paulusschoutsen.nl/blog/2013/10/tomato-api-documentation/">Tomato API</a>
blog post.</p>
<p>SSL Certificate:</p>
<p>Gathering the SSL Certificate of your router can be accomplished with this (or
a similar) command:</p>
<pre><code class="language-bash">openssl s_client -showcerts -connect 172.10.10.1:443 &lt;/dev/null 2&gt;/dev/null | openssl x509 -outform PEM &gt; router_cert.pem
</code></pre>
:ET