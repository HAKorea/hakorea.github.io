I"<p>The glossary covers terms which are used around Home Assistant.</p>
<ul>
  <li>
      <b>Action</b>: <p>An <a href="/docs/automation/action/">Action</a> is an event that can be fired as a response to a trigger,  once all conditions have been met.</p>
  </li>
  <li>
      <b>Add-on</b>: <p>Hass.io add-ons provide additional, standalone, applications that can run beside Home Assistant on a Hass.io installation. Most of these, add-on provided, applications can be integrated into Home Assistant using integrations. Examples of add-ons are: an MQTT broker, database service or a file server.</p>
  </li>
  <li>
      <b>Automation</b>: <p><a href="/docs/automation/">Automations</a> offer the capability to call a service based on a simple or complex trigger. Automation allows a condition such as a sunset to cause an event, such as a light turning on.</p>
  </li>
  <li>
      <b>Binary sensor</b>: <p>A <a href="/integrations/binary_sensor">binary sensor</a> returns information about things that only have two states - such as on or off.</p>
  </li>
  <li>
      <b>Component</b>: <p>Integrations (see below) used to be known as components.</p>
  </li>
  <li>
      <b>Condition</b>: <p><a href="/docs/scripts/conditions/">Conditions</a> are an optional part of an automation that will prevent an action from firing if they are not met.</p>
  </li>
  <li>
      <b>Cookbook</b>: <p>The <a href="/cookbook/">Cookbook</a> contains a set of configuration examples of Home Assistant from the community.</p>
  </li>
  <li>
      <b>Cover</b>: <p><a href="/integrations/cover">Covers</a> are devices such as blinds, garage doors, etc than can be opened and closed and optionally set to a specific position.</p>
  </li>
  <li>
      <b>Customize</b>: <p><a href="/docs/configuration/customizing-devices/">Customization</a> allows you to overwrite the default parameter of your devices in the configuration.</p>
  </li>
  <li>
      <b>Device</b>: <p>A device is usually a physical unit which can do or observe something.</p>
  </li>
  <li>
      <b>Device tracker</b>: <p><a href="/integrations/device_tracker">Device trackers</a> are used to track the presence, or location, of a device.</p>
  </li>
  <li>
      <b>Discovery</b>: <p><a href="/integrations/discovery/">Discovery</a> is the automatic setup of zeroconf/mDNS and uPnP devices after they are discovered.</p>
  </li>
  <li>
      <b>Entity</b>: <p>An <a href="/docs/configuration/platform_options/">entity</a> is the representation of function a single device, unit, or web service. There may be multiple entities for a single device, unit, or web service, or there may be only one.</p>
  </li>
  <li>
      <b>Event</b>: <p>An <a href="/docs/configuration/events/">event</a> is when something happens.</p>
  </li>
  <li>
      <b>Frontend</b>: <p>The <a href="/integrations/frontend/">frontend</a> is a necessary component for the UI, it is also where you can define your themes.</p>
  </li>
  <li>
      <b>Group</b>: <p><a href="/integrations/group/">Groups</a> are a way to organize your entities into a single unit.</p>
  </li>
  <li>
      <b>Hass.io</b>: <p><a href="/hassio/">Hass.io</a> is a full UI managed home automation ecosystem that runs Home Assistant, the Hass.io Supervisor and add-ons. It comes pre-installed on HassOS, but can be installed on any Linux system. It leverages Docker, which is managed by the Hass.io Supervisor.</p>
  </li>
  <li>
      <b>Hass.io Supervisor</b>: <p>The Hass.io Supervisor is a program that manages a Hass.io installation, taking care of installing and updating Home Assistant, add-ons, itself and, if used, updating the HassOS operating system.</p>
  </li>
  <li>
      <b>HassOS</b>: <p>HassOS, the Home Assistant Operating System, is an embedded, minimalistic, operating system designed to run the Hass.io ecosystem on single board computers (like the Raspberry Pi) or Virtual Machines. The Hass.io Supervisor can keep it up to date, removing the need for you to manage an operating system.</p>
  </li>
  <li>
      <b>Integration</b>: <p><a href="/integrations/">Integrations</a> provide the core logic for the functionality in Home Assistant. Like <code>notify</code> provides sending notifications.</p>
  </li>
  <li>
      <b>Light</b>: <p>A <a href="/integrations/light">light</a> has a brightness you can control, and optionally color temperature or RGB color control.</p>
  </li>
  <li>
      <b>Lovelace</b>: <p><a href="/lovelace/">Lovelace</a> is the name of the current frontend.</p>
  </li>
  <li>
      <b>Notification</b>: <p>You can use <a href="/integrations/#notifications">notifications</a> to send messages, pictures, and more, to devices.</p>
  </li>
  <li>
      <b>Packages</b>: <p><a href="/docs/configuration/packages/">Packages</a> allow you to bundle different component configurations together.</p>
  </li>
  <li>
      <b>Platform</b>: <p><a href="/docs/configuration/platform_options/">Platforms</a> make the connection to a specific software or hardware platform. For example, the <code>pushbullet</code> platform works with the service pushbullet.com to send notifications.</p>
  </li>
  <li>
      <b>Scene</b>: <p><a href="/integrations/scene/">Scenes</a> capture the states you want certain entities to be. For example, a scene can specify that light A should be turned on and light B should be bright red.</p>
  </li>
  <li>
      <b>Script</b>: <p><a href="/docs/scripts/">Scripts</a> are components that allow users to specify a sequence of actions to be executed by Home Assistant when turned on.</p>
  </li>
  <li>
      <b>Sensor</b>: <p><a href="/integrations/sensor">Sensors</a> return information about a thing, for instance the level of water in a tank.</p>
  </li>
  <li>
      <b>Service</b>: <p><a href="/docs/scripts/service-calls/">Services</a> are called to perform actions.</p>
  </li>
  <li>
      <b>Switch</b>: <p><a href="/integrations/switch">Switches</a> are things that have two states you can select between, such as turning on or off a socket.</p>
  </li>
  <li>
      <b>TTS</b>: <p>TTS (<a href="/integrations/tts">text to speech</a> allows Home Assistant to talk to you.</p>
  </li>
  <li>
      <b>Template</b>: <p>A <a href="/docs/automation/templating/">template</a> is an automation definition that can include variables for the service or data from the trigger values. This allows automations to generate dynamic actions.</p>
  </li>
  <li>
      <b>Trigger</b>: <p>A <a href="/docs/automation/trigger/">trigger</a> is a set of values or conditions of a platform that are defined to cause an automation to run.</p>
  </li>
  <li>
      <b>Zone</b>: <p><a href="/integrations/zone/">Zones</a> are areas that can be used for presence detection.</p>
  </li>
  <li>
      <b>hass</b>: <p>HASS or <a href="/docs/tools/hass/">hass</a> is often used as an abbreviation for Home Assistant. It is also the command-line tool.</p>
  </li>
</ul>
:ET