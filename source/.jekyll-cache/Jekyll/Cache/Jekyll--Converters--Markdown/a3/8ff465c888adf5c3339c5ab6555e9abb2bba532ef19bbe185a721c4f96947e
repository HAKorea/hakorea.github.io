I"!!<p>Home Assistant can run as a daemon within init.d with the script below.</p>
<h3>1. Copy script</h3>
<p>Copy either the daemon script or the Python environment script at the end of this page to <code>/etc/init.d/hass-daemon</code> depending on your installation.</p>
<p>After that, set the script to be executable:</p>
<pre><code class="language-bash">$ sudo chmod +x /etc/init.d/hass-daemon
</code></pre>
<h3>2. Select a user.</h3>
<p>Create or pick a user that the Home Assistant daemon will run under. Update script to set <code>RUN_AS</code> to the username that should be used to execute hass.</p>
<h3>3. Change hass executable and other variables if required.</h3>
<p>Some installation environments may require a change in the Home Assistant executable <code>hass</code>. Update script to set <code>HASS_BIN</code> to the appropriate <code>hass</code> executable path. Please also check the other variables for the appropriate value. In general the defaults should work</p>
<h3>4. Install this service</h3>
<pre><code class="language-bash">$ sudo service hass-daemon install
</code></pre>
<h3>5. Create logrotate rule</h3>
<p>This logrotate script at <code>/etc/logrotate.d/homeassistant</code> will create an outage of a few seconds every week at night. If you do not want this add <code>--log-rotate-days 7</code> to the <code>FLAGS</code> variable in the init script.</p>
<p>File <code>/var/log/homeassistant/home-assistant.log</code>:</p>
<pre><code class="language-text">{
        rotate 7
        daily
        missingok
        notifempty
        delaycompress
        compress
        postrotate
                invoke-rc.d hass-daemon restart &gt; /dev/null
        endscript
}

</code></pre>
<h3>6. Restart Machine</h3>
<p>That’s it. Restart your machine and Home Assistant should start automatically.</p>
<p>If HA does not start, check the log file output for errors at <code>/var/log/homeassistant/home-assistant.log</code></p>
<h3>Extra: Running commands before hass executes</h3>
<p>If any commands need to run before executing hass (like loading a virtual environment), put them in PRE_EXEC. This command must end with a semicolon.</p>
<h3>Daemon script</h3>
<pre><code class="language-bash">#!/bin/sh
### BEGIN INIT INFO
# Provides:          hass
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       Home\ Assistant
### END INIT INFO

# /etc/init.d Service Script for Home Assistant
# Created with: https://gist.github.com/naholyr/4275302#file-new-service-sh
PRE_EXEC=&quot;&quot;
# Typically /usr/bin/hass
HASS_BIN=&quot;hass&quot;
RUN_AS=&quot;homeassistant&quot;
PID_DIR=&quot;/var/run/hass&quot;
PID_FILE=&quot;$PID_DIR/hass.pid&quot;
CONFIG_DIR=&quot;/var/opt/homeassistant&quot;
LOG_DIR=&quot;/var/log/homeassistant&quot;
LOG_FILE=&quot;$LOG_DIR/home-assistant.log&quot;
FLAGS=&quot;-v --config $CONFIG_DIR --pid-file $PID_FILE --log-file $LOG_FILE --daemon&quot;


start() {
  create_piddir
  if [ -f $PID_FILE ] &amp;&amp; kill -0 $(cat $PID_FILE) 2&gt; /dev/null; then
    echo 'Service already running' &gt;&amp;2
    return 1
  fi
  echo -n 'Starting service… ' &gt;&amp;2
  local CMD=&quot;$PRE_EXEC $HASS_BIN $FLAGS&quot;
  su -s /bin/bash -c &quot;$CMD&quot; $RUN_AS
  if [ $? -ne 0 ]; then
    echo &quot;Failed&quot; &gt;&amp;2
  else
    echo 'Done' &gt;&amp;2
  fi
}

stop() {
  if [ ! -f &quot;$PID_FILE&quot; ] || ! kill -0 $(cat &quot;$PID_FILE&quot;) 2&gt; /dev/null; then
    echo 'Service not running' &gt;&amp;2
    return 1
  fi
  echo -n 'Stopping service… ' &gt;&amp;2
  kill $(cat &quot;$PID_FILE&quot;)
  while ps -p $(cat &quot;$PID_FILE&quot;) &gt; /dev/null 2&gt;&amp;1; do sleep 1;done;
  rm -f $PID_FILE
  echo 'Done' &gt;&amp;2
}

install() {
  echo &quot;Installing Home Assistant Daemon (hass-daemon)&quot;
  update-rc.d hass-daemon defaults
  create_piddir
  mkdir -p $CONFIG_DIR
  chown $RUN_AS $CONFIG_DIR
  mkdir -p $LOG_DIR
  chown $RUN_AS $LOG_DIR
}

uninstall() {
  echo &quot;Are you really sure you want to uninstall this service? The INIT script will&quot;
  echo -n &quot;also be deleted! That cannot be undone. [yes|No] &quot;
  local SURE
  read SURE
  if [ &quot;$SURE&quot; = &quot;yes&quot; ]; then
    stop
    remove_piddir
    echo &quot;Notice: The config directory has not been removed&quot;
    echo $CONFIG_DIR
    echo &quot;Notice: The log directory has not been removed&quot;
    echo $LOG_DIR
    update-rc.d -f hass-daemon remove
    rm -fv &quot;$0&quot;
    echo &quot;Home Assistant Daemon has been removed. Home Assistant is still installed.&quot;
  fi
}

create_piddir() {
  if [ ! -d &quot;$PID_DIR&quot; ]; then
    mkdir -p $PID_DIR
    chown $RUN_AS &quot;$PID_DIR&quot;
  fi
}

remove_piddir() {
  if [ -d &quot;$PID_DIR&quot; ]; then
    if [ -e &quot;$PID_FILE&quot; ]; then
      rm -fv &quot;$PID_FILE&quot;
    fi
    rmdir -v &quot;$PID_DIR&quot;
  fi
}

case &quot;$1&quot; in
  start)
    start
    ;;
  stop)
    stop
    ;;
  install)
    install
    ;;
  uninstall)
    uninstall
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo &quot;Usage: $0 {start|stop|restart|install|uninstall}&quot;
esac
</code></pre>
<h3>Python virtual environment</h3>
<pre><code class="language-bash">#!/bin/sh
### BEGIN INIT INFO
# Provides:          hass
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       Home\ Assistant
### END INIT INFO

# /etc/init.d Service Script for Home Assistant
# Created with: https://gist.github.com/naholyr/4275302#file-new-service-sh
PRE_EXEC=&quot;cd /srv/homeassistant; python3 -m venv .; source bin/activate;&quot;
# Typically /usr/bin/hass
HASS_BIN=&quot;hass&quot;
RUN_AS=&quot;homeassistant&quot;
PID_DIR=&quot;/var/run/hass&quot;
PID_FILE=&quot;$PID_DIR/hass.pid&quot;
CONFIG_DIR=&quot;/home/$RUN_AS/.homeassistant&quot;
LOG_DIR=&quot;/var/log/homeassistant&quot;
LOG_FILE=&quot;$LOG_DIR/home-assistant.log&quot;
FLAGS=&quot;-v --config $CONFIG_DIR --pid-file $PID_FILE --log-file $LOG_FILE --daemon&quot;

start() {
  create_piddir
  if [ -f $PID_FILE ] &amp;&amp; kill -0 $(cat $PID_FILE) 2&gt; /dev/null; then
    echo 'Service already running' &gt;&amp;2
    return 1
  fi
  echo -n 'Starting service… ' &gt;&amp;2
  local CMD=&quot;$PRE_EXEC $HASS_BIN $FLAGS&quot;
  su -s /bin/bash -c &quot;$CMD&quot; $RUN_AS
  if [ $? -ne 0 ]; then
    echo &quot;Failed&quot; &gt;&amp;2
  else
    echo 'Done' &gt;&amp;2
  fi
}

stop() {
  if [ ! -f &quot;$PID_FILE&quot; ] || ! kill -0 $(cat &quot;$PID_FILE&quot;) 2&gt; /dev/null; then
    echo 'Service not running' &gt;&amp;2
    return 1
  fi
  echo -n 'Stopping service… ' &gt;&amp;2
  kill $(cat &quot;$PID_FILE&quot;)
  while ps -p $(cat &quot;$PID_FILE&quot;) &gt; /dev/null 2&gt;&amp;1; do sleep 1;done;
  rm -f $PID_FILE
  echo 'Done' &gt;&amp;2
}

install() {
  echo &quot;Installing Home Assistant Daemon (hass-daemon)&quot;
  update-rc.d hass-daemon defaults
  create_piddir
  mkdir -p $CONFIG_DIR
  chown $RUN_AS $CONFIG_DIR
  mkdir -p $LOG_DIR
  chown $RUN_AS $LOG_DIR
}

uninstall() {
  echo &quot;Are you really sure you want to uninstall this service? The INIT script will&quot;
  echo -n &quot;also be deleted! That cannot be undone. [yes|No] &quot;
  local SURE
  read SURE
  if [ &quot;$SURE&quot; = &quot;yes&quot; ]; then
    stop
    remove_piddir
    echo &quot;Notice: The config directory has not been removed&quot;
    echo $CONFIG_DIR
    echo &quot;Notice: The log directory has not been removed&quot;
    echo $LOG_DIR
    update-rc.d -f hass-daemon remove
    rm -fv &quot;$0&quot;
    echo &quot;Home Assistant Daemon has been removed. Home Assistant is still installed.&quot;
  fi
}

create_piddir() {
  if [ ! -d &quot;$PID_DIR&quot; ]; then
    mkdir -p $PID_DIR
    chown $RUN_AS &quot;$PID_DIR&quot;
  fi
}

remove_piddir() {
  if [ -d &quot;$PID_DIR&quot; ]; then
    if [ -e &quot;$PID_FILE&quot; ]; then
      rm -fv &quot;$PID_FILE&quot;
    fi
    rmdir -v &quot;$PID_DIR&quot;
  fi
}

case &quot;$1&quot; in
  start)
    start
    ;;
  stop)
    stop
    ;;
  install)
    install
    ;;
  uninstall)
    uninstall
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo &quot;Usage: $0 {start|stop|restart|install|uninstall}&quot;
esac
</code></pre>
:ET