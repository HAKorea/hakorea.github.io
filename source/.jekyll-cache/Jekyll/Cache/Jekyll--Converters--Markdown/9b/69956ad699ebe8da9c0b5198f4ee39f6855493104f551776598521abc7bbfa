I"þ<p>The <code>opengarage</code> cover platform lets you control the open-source <a href="https://opengarage.io/">OpenGarage.io</a> device through Home Assistant.</p>
<h2>Configuration</h2>
<p>To enable OpenGarage Covers in your installation, add the following to your <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
cover:
  platform: opengarage
  covers:
    garage:
      host: 192.168.1.12
      device_key: opendoor
      name: Left Garage Door
    garage2:
      protocol: https
      verify_ssl: false
      host: garage.example.com
      port: 443
      device_key: opendoor
      name: Right Garage Door
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='covers' href='#covers'></a> covers</dt><dd><p class='desc'><span class='type'>(<span class='map'>map</span>)</span><span class='required'>(Required)</span><span class='description'><p>List of your doors.</p>
</span></p></dd><dd><dl class='nested'><dt><a class='title-link' name='identifier' href='#identifier'></a> identifier</dt><dd><p class='desc'><span class='type'>(<span class='map'>map</span>)</span><span class='required'>(Required)</span><span class='description'><p>Name of the cover as slug. Multiple entries are possible.</p>
</span></p></dd><dd><dl class='nested'><dt><a class='title-link' name='ssl' href='#ssl'></a> ssl</dt><dd><p class='desc'><span class='type'>(<span class='boolean'>boolean</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Use HTTPS instead of HTTP to connect.</p>
</span></p><p class='default'>
Default value: <p>false</p>
</p></dd><dt><a class='title-link' name='verify_ssl' href='#verify_ssl'></a> verify_ssl</dt><dd><p class='desc'><span class='type'>(<span class='boolean'>boolean</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Enable or disable SSL certificate verification. Set to false if you have a self-signed SSL certificate and havenâ€™t installed the CA certificate to enable verification.</p>
</span></p><p class='default'>
Default value: <p>true</p>
</p></dd><dt><a class='title-link' name='host' href='#host'></a> host</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>IP address of device.</p>
</span></p></dd><dt><a class='title-link' name='port' href='#port'></a> port</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>HTTP Port.</p>
</span></p><p class='default'>
Default value: <p>80</p>
</p></dd><dt><a class='title-link' name='device_key' href='#device_key'></a> device_key</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>Access key to control device.</p>
</span></p><p class='default'>
Default value: <p>opendoor</p>
</p></dd><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Name to use in the Frontend. If not provided, it will use name configured in device.</p>
</span></p></dd></dl></dd></dl></dd></dl>
</div>
<p><strong>Example with more detail:</strong></p>
<p class='img'>
  <img src='/images/integrations/opengarage/cover_opengarage_details.jpg' />
</p>
<pre><code class="language-yaml"># Related configuration.yaml entry
cover:
  platform: opengarage
  covers:
      garage:
        host: 192.168.1.12
        device_key: opendoor
        name: honda

sensor:
  platform: template
  sensors:
    garage_status:
      friendly_name: 'Honda Door Status'
      value_template: '{% if states.cover.honda %}
          {% if states.cover.honda.attributes[&quot;door_state&quot;] == &quot;open&quot; %}
            Open
          {% elif states.cover.honda.attributes[&quot;door_state&quot;] == &quot;closed&quot; %}
            Closed
          {% elif states.cover.honda.attributes[&quot;door_state&quot;] == &quot;opening&quot; %}
            Opening
          {% elif states.cover.honda.attributes[&quot;door_state&quot;] == &quot;closing&quot; %}
            Closing
          {% else %}
            Unknown
          {% endif %}
          {% else %}
          n/a
          {% endif %}'
    garage_car_present:
      friendly_name: 'Honda in Garage'
      value_template: '{% if states.cover.honda %}
          {% if is_state(&quot;cover.honda&quot;, &quot;open&quot;) %}
            n/a
          {% elif ((states.cover.honda.attributes[&quot;distance_sensor&quot;] &gt; 40) and (states.cover.honda.attributes[&quot;distance_sensor&quot;] &lt; 100)) %}
            Yes
          {% else %}
            No
          {% endif %}
          {% else %}
          n/a
          {% endif %}'

group:
  garage:
    name: Garage
    entities:
      - cover.honda
      - sensor.garage_status
      - sensor.garage_car_present

customize:
  cover.honda:
    friendly_name: Honda
    entity_picture: /local/honda.gif
  sensor.garage_car_present:
    icon: mdi:car
</code></pre>
:ET