I"Œ<p>The <code>transport_nsw</code> sensor will give you the time until the next departure from a Transport NSW stop for bus, train, light rail or ferry.</p>
<h2>Setup</h2>
<p>Prerequisite is a free API key from <a href="https://opendata.transport.nsw.gov.au/">Transport NSW</a>. You will need to register an account and then create a new application. You will need to add the â€˜Trip Planner APIsâ€™ to your application.</p>
<p>In order to find your stop id, use the <a href="https://transportnsw.info/stop#/">Transport NSW stop finder</a> and search for your stop. The URL will contain the stop id as a number.</p>
<p>You may also try going to Google maps and clicking on any bus/train/ferry stop. The pop up window shows the stop ID underneath the station name. For train stations the easist way to get a stop id for a platform is through <a href="https://transportnsw.info/">Transport NSW Info</a>.</p>
<p>As a default the sensor picks up the next mode of transport leaving from a stop id.</p>
<h2>Configuration</h2>
<p>To enable the sensor, add the following lines to your <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
sensor:
  - platform: transport_nsw
    stop_id: '200024'
    api_key: 'YOUR API KEY'
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='api_key' href='#api_key'></a> api_key</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>Your API key for Open Data Transport NSW.</p>
</span></p></dd><dt><a class='title-link' name='stop_id' href='#stop_id'></a> stop_id</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>The ID of the stop to get the information for.</p>
</span></p></dd><dt><a class='title-link' name='route' href='#route'></a> route</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Filter on bus route at the stop. This is the same as the bus number, e.g., <code>83</code>.</p>
</span></p></dd><dt><a class='title-link' name='destination' href='#destination'></a> destination</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Useful for ferry or train stops to filter the destination of the sensor, e.g. <code>Circular Quay</code>.</p>
</span></p></dd><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>A friendly name for this sensor.</p>
</span></p></dd></dl>
</div>
<p>The public information is provided from <a href="https://opendata.transport.nsw.gov.au/">Transport NSW</a>.</p>
<h2>Examples</h2>
<p>More example configurations for bus or ferry.</p>
<pre><code class="language-yaml"># Example bus route configuration.yaml entry
sensor:
  - platform: transport_nsw
    name: 'Bus'
    stop_id: '209516'
    route:  '199'
    api_key: 'YOUR API KEY'
</code></pre>
<pre><code class="language-yaml"># Example ferry configuration.yaml entry
sensor:
  - platform: transport_nsw
    name: 'Ferry'
    stop_id: '10102008'
    destination: 'Circular Quay'
    api_key: 'YOUR API KEY'
</code></pre>
<p>The sensor returns n/a if no stop event is found within the next 24h. A <code>template</code> sensor can help building a more meaninful string.</p>
<pre><code class="language-yaml"># Sample template sensor
- platform: template
  sensors:
    busmonitor:
      friendly_name: &quot;Bus Mon 199&quot;
      value_template: &gt;-
        {% if is_state_attr('sensor.bus', 'due', 'n/a') %}
          No schedule found
        {% else %}
          {{ state_attr('sensor.bus', 'route') }} in {{ state_attr('sensor.bus', 'due') }}m ({{ state_attr('sensor.bus', 'delay') }})
        {% endif %}
</code></pre>
:ET