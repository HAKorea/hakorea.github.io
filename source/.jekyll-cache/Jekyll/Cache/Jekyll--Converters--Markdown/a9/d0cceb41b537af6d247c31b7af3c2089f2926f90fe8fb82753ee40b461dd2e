I"S<p>The <code>mcp23017</code> integration is the base for all related mcp23017 platforms in Home Assistant. There is no setup needed for the integration itself, for the platforms please check their corresponding sections.</p>
<p>For more details about the MCP23017 I2C I/O port expander you can find its datasheet here: <a href="https://www.microchip.com/wwwproducts/en/MCP23017">MCP23017</a>.</p>
<p>If you are using Hass.io on HassOS you canâ€™t use existing methods to enable the I2C bus on a Raspberry Pi, you will have to <a href="https://github.com/home-assistant/hassos/blob/dev/Documentation/boards/raspberrypi.md#i2c">enable the I2C interface in the Hass.io configuration</a> using a USB stick. To accomplish that, follow this step by step instructions: <a href="https://www.home-assistant.io/hassio/enable_i2c">Enable HassOS i2c</a>.</p>
<h2>Binary Sensor</h2>
<p>The <code>mcp23017</code> binary sensor platform allows you to read sensor values from the I/O pins of your <a href="https://www.adafruit.com/product/732">MCP23017 I2C I/O expander</a>.</p>
<p>The pin numbers are from 0 to 15 where: 0-7 correspond to port A (A1-A8) and 8-15 to port B (B1-B8).</p>
<h3>Configuration</h3>
<p>To use the I/O pins of an mcp23017 connected to an I2C bus of your Raspberry Pi as binary sensors, add the following to your <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
binary_sensor:
  - platform: mcp23017
    i2c_address: 0x20
    pins:
      0: PIR Office
      1: PIR Bedroom
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='i2c_address' href='#i2c_address'></a> i2c_address</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>i2c address of MCP23017 chip.</p>
</span></p><p class='default'>
Default value: <p><code>0x20</code></p>
</p></dd><dt><a class='title-link' name='pins' href='#pins'></a> pins</dt><dd><p class='desc'><span class='type'>(<span class='map'>map</span>)</span><span class='required'>(Required)</span><span class='description'><p>List of used pins.</p>
</span></p></dd><dd><dl class='nested'><dt><a class='title-link' name='pin-name' href='#pin-name'></a> pin: name</dt><dd><p class='desc'><span class='type'>(<span class='integer string'>integer | string</span>)</span><span class='required'>(Required)</span><span class='description'><p>The pin numbers (from 0 to 15) and corresponding names.</p>
</span></p></dd></dl></dd><dt><a class='title-link' name='scan_interval' href='#scan_interval'></a> scan_interval</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Interval to scan for sensor state changes in seconds.</p>
</span></p><p class='default'>
Default value: <p>15</p>
</p></dd><dt><a class='title-link' name='invert_logic' href='#invert_logic'></a> invert_logic</dt><dd><p class='desc'><span class='type'>(<span class='boolean'>boolean</span>)</span><span class='required'>(Optional)</span><span class='description'><p>If <code>true</code>, inverts the output logic to ACTIVE LOW.</p>
</span></p><p class='default'>
Default value: <p><code>false</code> (ACTIVE HIGH)</p>
</p></dd><dt><a class='title-link' name='pull_mode' href='#pull_mode'></a> pull_mode</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Type of internal pull resistor to use. Options are <code>UP</code> - pull-up resistor and <code>DOWN</code> - pull-down resistor.</p>
</span></p><p class='default'>
Default value: <p><code>UP</code></p>
</p></dd></dl>
</div>
<div class='note warning'>
  MCP23017 only has internal pull-up resistors, if you want to use pull-down you will have to wire your own pull-down resistors.
</div>
<h2>Switch</h2>
<p>The <code>mcp23017</code> switch platform allows you to write to the I/O pins of your <a href="https://www.adafruit.com/product/732">MCP23017 I2C I/O expander</a>.</p>
<p>The pin numbers are from 0 to 15 where: 0-7 correspond to port A (A1-A8) and 8-15 to port B (B1-B8).</p>
<h3>Configuration</h3>
<p>To use the I/O pins of an mcp23017 connected to an I2C bus of your Raspberry Pi as switches, add the following to your <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
switch:
  - platform: mcp23017
    i2c_address: 0x20
    pins:
      11: Fan Office
      12: Light Desk
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='i2c_address' href='#i2c_address'></a> i2c_address</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>i2c address of MCP23017 chip.</p>
</span></p><p class='default'>
Default value: <p><code>0x20</code></p>
</p></dd><dt><a class='title-link' name='pins' href='#pins'></a> pins</dt><dd><p class='desc'><span class='type'>(<span class='list'>list</span>)</span><span class='required'>(Required)</span><span class='description'><p>Array of used pins.</p>
</span></p></dd><dd><dl class='nested'><dt><a class='title-link' name='pin' href='#pin'></a> pin</dt><dd><p class='desc'><span class='type'>(<span class='integer string'>integer | string</span>)</span><span class='required'>(Required)</span><span class='description'><p>The pin numbers (from 0 to 15) and corresponding names.</p>
</span></p></dd></dl></dd><dt><a class='title-link' name='invert_logic' href='#invert_logic'></a> invert_logic</dt><dd><p class='desc'><span class='type'>(<span class='boolean'>boolean</span>)</span><span class='required'>(Optional)</span><span class='description'><p>If true, inverts the output logic to ACTIVE LOW.</p>
</span></p><p class='default'>
Default value: <p>false</p>
</p></dd></dl>
</div>
:ET