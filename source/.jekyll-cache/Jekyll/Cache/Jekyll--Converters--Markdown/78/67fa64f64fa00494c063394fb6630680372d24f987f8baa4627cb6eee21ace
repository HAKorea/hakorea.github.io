I"a<p>LiteJet is a centralized lighting system that predates most home automation technology. All lights and wall switches are wired to a central panel. This central panel has a serial port interface that allows a computer to control the system via LiteJetâ€™s third party protocol.</p>
<p>Home Assistant integrates the LiteJet 3rd party protocol and allows you to get the status and control the connected lights.</p>
<p>After connecting the LiteJetâ€™s RS232-2 port to your computer, add the following to your <code>configuration.yaml</code>:</p>
<pre><code class="language-yaml">litejet:
  port: /dev/serial/by-id/THE-PATH-OF-YOUR-SERIAL-PORT
</code></pre>
<p>Your LiteJet MCP should be configured for 19.2 K baud, 8 data bits, 1 stop bit, no parity, and to transmit a â€˜CRâ€™ after each response. These settings can be configured using the <a href="https://www.centralite.com/helpdesk/knowledgebase.php?article=735">LiteJet programming software</a>.</p>
<p>You can also configure the Home Assistant to ignore lights, scenes, and switches via their name. This is highly recommended since LiteJet has a fixed number of each of these and with most systems many will be unused.</p>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='port' href='#port'></a> port</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>The path to the serial port connected to the LiteJet.</p>
</span></p></dd><dt><a class='title-link' name='exclude_names' href='#exclude_names'></a> exclude_names</dt><dd><p class='desc'><span class='type'>(<span class='list string'>list | string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>A list of light or switch names that should be ignored.</p>
</span></p></dd><dt><a class='title-link' name='include_switches' href='#include_switches'></a> include_switches</dt><dd><p class='desc'><span class='type'>(<span class='boolean'>boolean</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Cause entities to be created for all the LiteJet switches. This can be useful when debugging your lighting as you can press/release switches remotely.</p>
</span></p><p class='default'>
Default value: <p>false</p>
</p></dd></dl>
</div>
<pre><code class="language-yaml">litejet:
  exclude_names:
  - 'Button #'
  - 'Scene #'
  - 'Timed Scene #'
  - 'Timed Scene#'
  - 'LV Rel #'
  - 'Fan #'
</code></pre>
<h3>Trigger</h3>
<p>LiteJet switches can be used as triggers too to allow those buttons to behave differently based on hold time. For example, automation can distinguish quick tap versus long hold.</p>
<ul>
<li><strong>platform</strong> (<em>Required</em>): Must be â€˜litejetâ€™.</li>
<li><strong>number</strong> (<em>Required</em>): The switch number to be monitored.</li>
<li><strong>held_more_than</strong> (<em>Optional</em>): The minimum time the switch must be held before the trigger can activate.</li>
<li><strong>held_less_than</strong> (<em>Optional</em>): The maximum time the switch can be held for the trigger to activate.</li>
</ul>
<p>The trigger will activate at the earliest moment both <code>held_more_than</code> and <code>held_less_than</code> are known to be satisfied. If neither are specified, the trigger activates the moment the switch is pressed. If only <code>held_more_than</code> is specified, the trigger will activate the moment the switch has been held down at least that time. If <code>held_less_than</code> specified, the trigger can only activate when the switch is released.</p>
<pre><code class="language-yaml">automation:
- trigger:
    platform: litejet
    number: 55
    held_more_than:
      milliseconds: 1000
    held_less_than:
      milliseconds: 2000
</code></pre>
:ET