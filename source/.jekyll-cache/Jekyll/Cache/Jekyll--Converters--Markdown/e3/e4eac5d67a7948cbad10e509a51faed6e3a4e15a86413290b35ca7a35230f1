I"¾<p>The <code>generic</code> camera platform allows you to integrate any IP camera or other URL into Home Assistant. Templates can be used to generate the URLs on the fly.</p>
<p>Home Assistant will serve the images via its server, making it possible to view your IP cameras while outside of your network. The endpoint is <code>/api/camera_proxy/camera.[name]</code>.</p>
<h2>Configuration</h2>
<p>To enable this camera in your installation, add the following to your <code>configuration.yaml</code> file:</p>
<pre><code class="language-yaml"># Example configuration.yaml entry
camera:
  - platform: generic
    still_image_url: http://194.218.96.92/jpg/image.jpg
</code></pre>
<div class="config-vars">
  <h3><a class="title-link" name="configuration-variables" href="#configuration-variables"></a> Configuration Variables</h3>
  <dl class=''><dt><a class='title-link' name='still_image_url' href='#still_image_url'></a> still_image_url</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Required)</span><span class='description'><p>The URL your camera serves the image on, e.g., <code>http://192.168.1.21:2112/</code>. Can be a <a href="/topics/templating/">template</a>.</p>
</span></p></dd><dt><a class='title-link' name='stream_source' href='#stream_source'></a> stream_source</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The URL your camera serves the live stream on, e.g., <code>rtsp://192.168.1.21:554/</code>.</p>
</span></p></dd><dt><a class='title-link' name='name' href='#name'></a> name</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>This parameter allows you to override the name of your camera.</p>
</span></p></dd><dt><a class='title-link' name='username' href='#username'></a> username</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The username for accessing your camera.</p>
</span></p></dd><dt><a class='title-link' name='password' href='#password'></a> password</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The password for accessing your camera.</p>
</span></p></dd><dt><a class='title-link' name='authentication' href='#authentication'></a> authentication</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Type for authenticating the requests <code>basic</code> or <code>digest</code>.</p>
</span></p><p class='default'>
Default value: <p>basic</p>
</p></dd><dt><a class='title-link' name='limit_refetch_to_url_change' href='#limit_refetch_to_url_change'></a> limit_refetch_to_url_change</dt><dd><p class='desc'><span class='type'>(<span class='boolean'>boolean</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Limits re-fetching of the remote image to when the URL changes. Only relevant if using a template to fetch the remote image.</p>
</span></p><p class='default'>
Default value: <p>false</p>
</p></dd><dt><a class='title-link' name='content_type' href='#content_type'></a> content_type</dt><dd><p class='desc'><span class='type'>(<span class='string'>string</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Set the content type for the IP camera if it is not a jpg file. Use <code>image/svg+xml</code> to add a dynamic SVG file.</p>
</span></p><p class='default'>
Default value: <p>image/jpeg</p>
</p></dd><dt><a class='title-link' name='framerate' href='#framerate'></a> framerate</dt><dd><p class='desc'><span class='type'>(<span class='integer'>integer</span>)</span><span class='required'>(Optional)</span><span class='description'><p>The number of frames-per-second (FPS) of the stream. Can cause heavy traffic on the network and/or heavy load on the camera.</p>
</span></p></dd><dt><a class='title-link' name='verify_ssl' href='#verify_ssl'></a> verify_ssl</dt><dd><p class='desc'><span class='type'>(<span class='boolean'>boolean</span>)</span><span class='required'>(Optional)</span><span class='description'><p>Enable or disable SSL certificate verification. Set to false to use an http-only camera, or you have a self-signed SSL certificate and havenâ€™t installed the CA certificate to enable verification.</p>
</span></p><p class='default'>
Default value: <p>true</p>
</p></dd></dl>
</div>
<p class='img'>
  <a href='/cookbook/google_maps_card/'>
    <img src='/images/integrations/camera/generic-google-maps.png' alt='Screenshot showing Google Maps integration in Home Assistant front end.'>
    Example showing the Generic camera platform pointing at a dynamic Google Map image.
  </a>
</p>
<h2>Examples</h2>
<p>In this section, you find some real-life examples of how to use this camera platform.</p>
<h3>Weather graph from yr.no</h3>
<pre><code class="language-yaml">camera:
  - platform: generic
    name: Weather
    still_image_url: https://www.yr.no/place/Norway/Oslo/Oslo/Oslo/meteogram.svg
    content_type: 'image/svg+xml'
</code></pre>
<h3>Local image with Hass.io</h3>
<p>You can show a static image with this platform. Just place the image here: <code>/config/www/your_image.png</code></p>
<pre><code class="language-yaml">camera:
  - platform: generic
    name: Some Image
    still_image_url: https://127.0.0.1:8123/local/your_image.png
    verify_ssl: false
</code></pre>
<h3>Sharing a camera feed from one Home Assistant instance to another</h3>
<p>If you are running more than one Home Assistant instance (letâ€™s call them the â€˜hostâ€™ and â€˜receiverâ€™ instances) you may wish to display the camera feed from the host instance on the receiver instance. You can use the <a href="/developers/rest_api/#get-apicamera_proxycameraltentity_id">REST API</a> to access the camera feed on the host (IP address 127.0.0.5) and display it on the receiver instance by configuring the receiver with the following:</p>
<pre><code class="language-yaml">camera:
  - platform: generic
    name: Host instance camera feed
    still_image_url: https://127.0.0.5:8123/api/camera_proxy/camera.live_view
</code></pre>
<h3>Image from HTTP only camera</h3>
<p>To access a camera which is only available via HTTP, you must turn off SSL verification.</p>
<pre><code class="language-yaml">camera:
  - platform: generic
    name: Some Image
    still_image_url: http://example.org/your_image.png
    verify_ssl: false
</code></pre>
<h3>Live stream</h3>
<p>To access a camera that has both a snapshot and live stream URL, utilizing the <a href="/integrations/stream/">stream</a> component.</p>
<pre><code class="language-yaml">camera:
  - platform: generic
    name: Streaming Enabled
    still_image_url: http://194.218.96.92/jpg/image.jpg
    stream_source: rtsp://194.218.96.92:554
</code></pre>
:ET